##
## Copyright 2023 Ocean Protocol Foundation
## SPDX-License-Identifier: Apache-2.0
##
name: Ocean.py tests

on:
  - push
  - pull_request

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    environment: CC_REPORTER_ID
    runs-on: ubuntu-latest
    steps:
      - name: Setup Ocean.py
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - uses: actions/checkout@v2
        name: Checkout Barge
        with:
          repository: "oceanprotocol/barge"
          path: 'barge'
      - name: Run Barge
        working-directory: ${{ github.workspace }}/barge
        env:
          GANACHE_HARDFORK: london
        run: |
          bash -x start_ocean.sh --no-dashboard 2>&1 --with-provider2 --with-thegraph --with-c2d --skip-subgraph-deploy > start_ocean.log &
      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
      - name: Delete default runner images
        run: |
          docker image rm node:14
          docker image rm node:14-alpine
          docker image rm node:16
          docker image rm node:16-alpine
          docker image rm node:18
          docker image rm node:18-alpine
          docker image rm buildpack-deps:buster
          docker image rm buildpack-deps:bullseye
          docker image rm debian:10
          docker image rm debian:11
          docker image rm moby/buildkit:latest
      - name: Wait for contracts deployment
        working-directory: ${{ github.workspace }}/barge
        run: |
          for i in $(seq 1 250); do
            sleep 5
            [ -f "$HOME/.ocean/ocean-contracts/artifacts/ready" -a -f "$HOME/.ocean/ocean-c2d/ready" ] && break
            done
      - name: "Read address.json contents"
        working-directory: ${{ github.workspace }}
        run: cat "$HOME/.ocean/ocean-contracts/artifacts/address.json"
      - name: Test with pytest
        run: |
          mkcodes --github --output tests/generated-readmes/test_{name}.{ext} READMEs
          coverage run --source ocean_lib -m pytest
          coverage report
          coverage xml
        env:
          REMOTE_TEST_PRIVATE_KEY1: ${{secrets.REMOTE_TEST_PRIVATE_KEY1}}
          REMOTE_TEST_PRIVATE_KEY2: ${{secrets.REMOTE_TEST_PRIVATE_KEY2}}
          MUMBAI_RPC_URL: ${{secrets.MUMBAI_RPC_URL}}
      - name:  docker logs
        run: docker logs ocean_aquarius_1 && docker logs ocean_provider_1
        if: ${{ failure() }}
      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
