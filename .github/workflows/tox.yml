##
## Copyright 2021 Ocean Protocol Foundation
## SPDX-License-Identifier: Apache-2.0
##
name: Ocean.py tests

on:
  - push
  - pull_request
  - release:
    - types: [created]

jobs:
  build-n-publish:
    environment:
      CC_TEST_REPORTER_ID: ${{ secrets. CC_TEST_REPORTER_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Ocean.py
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - uses: actions/checkout@v2
        name: Checkout Barge
        with:
          repository: "oceanprotocol/barge"
          path: 'barge'
      - name: Run Barge
        working-directory: ${{ github.workspace }}/barge
        run: |
          export AQUARIUS_VERSION=v3.1.1
          bash -x start_ocean.sh --no-dashboard 2>&1 --with-rbac > start_ocean.log &
          for i in $(seq 1 50); do
            sleep 5
            [ -f "$HOME/.ocean/ocean-contracts/artifacts/ready" ] && break
            done
          ls -la "$HOME/.ocean/ocean-contracts/artifacts/"
      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Test with tox and publish code coverage
        uses: paambaati/codeclimate-action@v2.7.5
        with:
          coverageCommand: tox
          debug: true
      - name: Install pypa/build
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
      - name: Publish package
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}

