{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "blob",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "feeAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "num_tokens_minted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max_fee",
          "type": "uint256"
        }
      ],
      "name": "_calculateFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blob",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "blob",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "feeAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "address_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "num_tokens_minted",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Context.sol",
    "10": "contracts/IERC20Template.sol",
    "12": "contracts/SafeMath.sol",
    "3": "contracts/DataTokenTemplate.sol",
    "5": "contracts/ERC20.sol",
    "6": "contracts/ERC20Pausable.sol",
    "9": "contracts/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/DataTokenTemplate.sol",
    "exportedSymbols": {
      "DataTokenTemplate": [
        587
      ]
    },
    "id": 588,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 185,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 186,
        "nodeType": "ImportDirective",
        "scope": 588,
        "sourceUnit": 1700,
        "src": "186:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC20Pausable.sol",
        "file": "./ERC20Pausable.sol",
        "id": 187,
        "nodeType": "ImportDirective",
        "scope": 588,
        "sourceUnit": 1142,
        "src": "211:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IERC20Template.sol",
        "file": "./IERC20Template.sol",
        "id": 188,
        "nodeType": "ImportDirective",
        "scope": 588,
        "sourceUnit": 1775,
        "src": "241:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 189,
              "name": "IERC20Template",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1774,
              "src": "492:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Template_$1774",
                "typeString": "contract IERC20Template"
              }
            },
            "id": 190,
            "nodeType": "InheritanceSpecifier",
            "src": "492:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 191,
              "name": "ERC20Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1141,
              "src": "508:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Pausable_$1141",
                "typeString": "contract ERC20Pausable"
              }
            },
            "id": 192,
            "nodeType": "InheritanceSpecifier",
            "src": "508:13:3"
          }
        ],
        "contractDependencies": [
          101,
          1020,
          1141,
          1394,
          1774
        ],
        "contractKind": "contract",
        "documentation": "@title DataTokenTemplate\n \n@dev DataTokenTemplate is a DataToken ERC20 compliant template\n     Used by the factory contract as a bytecode reference to deploy new DataTokens.",
        "fullyImplemented": true,
        "id": 587,
        "linearizedBaseContracts": [
          587,
          1141,
          1020,
          1394,
          101,
          1774
        ],
        "name": "DataTokenTemplate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 195,
            "libraryName": {
              "contractScope": null,
              "id": 193,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1699,
              "src": "534:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1699",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "528:27:3",
            "typeName": {
              "id": 194,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "547:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 198,
            "name": "initialized",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "565:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 196,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "565:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 197,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "595:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 200,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "606:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 199,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "606:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 202,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "633:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 201,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "633:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 204,
            "name": "_blob",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "662:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 203,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "662:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 206,
            "name": "_cap",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "689:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 205,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "689:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 208,
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "715:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 207,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "715:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 210,
            "name": "_minter",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "746:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 209,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "746:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 212,
            "name": "_feeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "775:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 211,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "775:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 221,
              "nodeType": "Block",
              "src": "851:89:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "867:12:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 215,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "868:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44617461546f6b656e54656d706c6174653a20616c726561647920696e697469616c697a6564",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "881:40:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a066f59ef994618ea8a12535f4cc6305a4216587192684113d835bf56e74b0bb",
                          "typeString": "literal_string \"DataTokenTemplate: already initialized\""
                        },
                        "value": "DataTokenTemplate: already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a066f59ef994618ea8a12535f4cc6305a4216587192684113d835bf56e74b0bb",
                          "typeString": "literal_string \"DataTokenTemplate: already initialized\""
                        }
                      ],
                      "id": 214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1792,
                        1793
                      ],
                      "referencedDeclaration": 1793,
                      "src": "859:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "859:63:3"
                },
                {
                  "id": 220,
                  "nodeType": "PlaceholderStatement",
                  "src": "932:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 222,
            "name": "onlyNotInitialized",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:2:3"
            },
            "src": "821:119:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "972:95:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 225,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1789,
                            "src": "990:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "990:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 227,
                          "name": "_minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "1004:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "990:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44617461546f6b656e54656d706c6174653a20696e76616c6964206d696e746572",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1013:35:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40e35c5de830427b1e8c63a3538e0f1b39d02b02870d69ff7c4ee4488565fe71",
                          "typeString": "literal_string \"DataTokenTemplate: invalid minter\""
                        },
                        "value": "DataTokenTemplate: invalid minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40e35c5de830427b1e8c63a3538e0f1b39d02b02870d69ff7c4ee4488565fe71",
                          "typeString": "literal_string \"DataTokenTemplate: invalid minter\""
                        }
                      ],
                      "id": 224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1792,
                        1793
                      ],
                      "referencedDeclaration": 1793,
                      "src": "982:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "982:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "982:67:3"
                },
                {
                  "id": 232,
                  "nodeType": "PlaceholderStatement",
                  "src": "1059:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 234,
            "name": "onlyMinter",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "969:2:3"
            },
            "src": "950:117:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "1588:73:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "1610:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "1616:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 252,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "1624:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "cap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "1632:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 254,
                        "name": "blob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "1637:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 255,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "1643:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 249,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "1598:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (string memory,string memory,address,uint256,string memory,address payable) returns (bool)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1598:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:56:3"
                }
              ]
            },
            "documentation": "@dev constructor\n     Called on contract deployment.  Could not be called with zero address parameters.\n@param name -- token name\n@param symbol -- token symbol\n@param minter -- address with the right to mint()\n@param feeAddress -- address that receives fees",
            "id": 259,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1410:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1438:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 240,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1468:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 242,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1492:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1492:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "name": "blob",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1513:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "name": "feeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1541:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1400:168:3"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1588:0:3"
            },
            "scope": 587,
            "src": "1389:272:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "2317:78:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 279,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "2344:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 280,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "2350:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "2358:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 282,
                        "name": "cap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "2366:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "blob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "2371:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "2377:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 278,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "2332:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (string memory,string memory,address,uint256,string memory,address payable) returns (bool)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 277,
                  "id": 286,
                  "nodeType": "Return",
                  "src": "2325:63:3"
                }
              ]
            },
            "documentation": "@dev initialize\n     Called on contract initialization. Used on new DataToken instance setup.\nCalls private _initialize function. Only if contract is not initialized.\n@param name -- token name\n@param symbol -- token symbol\n@param minter -- address with the right to mint()\n@param feeAddress -- address that receives fees",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 274,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 273,
                  "name": "onlyNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 222,
                  "src": "2271:18:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2271:18:3"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2091:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2119:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2119:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2149:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2149:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2173:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "name": "blob",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2194:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "name": "feeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2222:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2222:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2081:173:3"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2307:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2306:6:3"
            },
            "scope": 587,
            "src": "2062:333:3",
            "stateMutability": "nonpayable",
            "superFunction": 1718,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "2981:547:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "2997:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3015:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3007:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3007:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2997:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44617461546f6b656e54656d706c6174653a204d696e7465722061646472657373207761732030",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3019:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f8b794184a3a7bcc642328a11b835a21bd15f007eda239adda528c88c3b189e",
                          "typeString": "literal_string \"DataTokenTemplate: Minter address was 0\""
                        },
                        "value": "DataTokenTemplate: Minter address was 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f8b794184a3a7bcc642328a11b835a21bd15f007eda239adda528c88c3b189e",
                          "typeString": "literal_string \"DataTokenTemplate: Minter address was 0\""
                        }
                      ],
                      "id": 305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1792,
                        1793
                      ],
                      "referencedDeclaration": 1793,
                      "src": "2989:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 315,
                          "name": "feeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "3077:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3099:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3091:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3091:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3077:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44617461546f6b656e54656d706c6174653a2066656541646472657373207761732030",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3103:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d279ae613e23abcc7aa77983d1d8640aae706d8ca2890bd5bcdea1abaa78d1c9",
                          "typeString": "literal_string \"DataTokenTemplate: feeAddress was 0\""
                        },
                        "value": "DataTokenTemplate: feeAddress was 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d279ae613e23abcc7aa77983d1d8640aae706d8ca2890bd5bcdea1abaa78d1c9",
                          "typeString": "literal_string \"DataTokenTemplate: feeAddress was 0\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1792,
                        1793
                      ],
                      "referencedDeclaration": 1793,
                      "src": "3069:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3069:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 324,
                          "name": "_minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "3157:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3176:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3168:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3168:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3157:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44617461546f6b656e54656d706c6174653a20496e76616c6964206d696e7465722c206163636573732064656e696564",
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3180:50:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c3675d49aa84b4bf3f24fa534d202b41b55206398187a94a9f603de48c92202",
                          "typeString": "literal_string \"DataTokenTemplate: Invalid minter, access denied\""
                        },
                        "value": "DataTokenTemplate: Invalid minter, access denied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c3675d49aa84b4bf3f24fa534d202b41b55206398187a94a9f603de48c92202",
                          "typeString": "literal_string \"DataTokenTemplate: Invalid minter, access denied\""
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1792,
                        1793
                      ],
                      "referencedDeclaration": 1793,
                      "src": "3149:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3149:82:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:82:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 333,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 296,
                          "src": "3247:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3253:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3247:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44617461546f6b656e54656d706c6174653a2043617020776173203c3d2030",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3256:33:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fb8b3c12a58f1d4bbddbb8b3b0b8cf6ef227bbe1ec05bcdb43a021ce6d6f7d4",
                          "typeString": "literal_string \"DataTokenTemplate: Cap was <= 0\""
                        },
                        "value": "DataTokenTemplate: Cap was <= 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1fb8b3c12a58f1d4bbddbb8b3b0b8cf6ef227bbe1ec05bcdb43a021ce6d6f7d4",
                          "typeString": "literal_string \"DataTokenTemplate: Cap was <= 0\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1792,
                        1793
                      ],
                      "referencedDeclaration": 1793,
                      "src": "3239:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3239:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "3239:51:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "3309:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3321:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3309:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3309:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 343,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "3332:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 344,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "3339:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3332:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "3332:10:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 347,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "3352:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 348,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "3360:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3352:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:12:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "_blob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "3374:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 352,
                      "name": "blob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "3382:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3374:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "3374:12:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 355,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3396:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 356,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "3406:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3396:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 359,
                      "name": "_minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "3422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 360,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "3432:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3422:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 363,
                      "name": "_feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "3441:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 364,
                      "name": "feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "3455:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3441:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "3441:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 367,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "3475:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3489:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3475:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "3475:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 371,
                    "name": "initialized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 198,
                    "src": "3510:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 304,
                  "id": 372,
                  "nodeType": "Return",
                  "src": "3503:18:3"
                }
              ]
            },
            "documentation": "@dev _initialize\n     Private function called on contract initialization.\nNo of the parameters can be a zero address. \n@param name -- token name\n@param symbol -- token symbol\n@param minter -- address with the right to mint()\n@param feeAddress -- address that receives fees",
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "2774:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "2802:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2802:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "2832:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2832:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "2856:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 298,
                  "name": "blob",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "2877:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "feeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "2905:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2764:173:3"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "2971:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2970:6:3"
            },
            "scope": 587,
            "src": "2744:784:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "4000:445:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 389,
                              "name": "num_tokens_minted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "4036:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 386,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 647,
                                "src": "4018:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4018:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1539,
                            "src": "4018:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4018:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "4058:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4018:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636170206578636565646564",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4064:14:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b4c68f16cb2afa5fc868158b8ae62d040df3114e42b1a2dbfbf78e5323db2e2",
                          "typeString": "literal_string \"cap exceeded\""
                        },
                        "value": "cap exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b4c68f16cb2afa5fc868158b8ae62d040df3114e42b1a2dbfbf78e5323db2e2",
                          "typeString": "literal_string \"cap exceeded\""
                        }
                      ],
                      "id": 385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1792,
                        1793
                      ],
                      "referencedDeclaration": 1793,
                      "src": "4010:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:69:3"
                },
                {
                  "assignments": [
                    397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 397,
                      "name": "gas_before",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "4083:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4083:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 400,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 398,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1782,
                      "src": "4104:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4104:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4083:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 402,
                        "name": "address_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "4129:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "num_tokens_minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "4141:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 401,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 904,
                      "src": "4123:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4123:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "4123:36:3"
                },
                {
                  "assignments": [
                    407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 407,
                      "name": "gas_after",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "4162:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 406,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4162:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 410,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 408,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1782,
                      "src": "4182:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4182:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4162:29:3"
                },
                {
                  "assignments": [
                    412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 412,
                      "name": "gas_used",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "4196:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 411,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4196:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 416,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 413,
                      "name": "gas_before",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "4215:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 414,
                      "name": "gas_after",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "4228:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4215:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4196:41:3"
                },
                {
                  "assignments": [
                    418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 418,
                      "name": "max_fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "4240:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4240:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 423,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 419,
                      "name": "gas_used",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "4258:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 420,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1801,
                        "src": "4269:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4269:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4258:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4240:40:3"
                },
                {
                  "assignments": [
                    425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 425,
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "4283:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 424,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4283:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 430,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "num_tokens_minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "4311:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "max_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "4330:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 426,
                      "name": "_calculateFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "4297:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4297:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4283:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 432,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1789,
                            "src": "4358:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4358:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 434,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 425,
                          "src": "4371:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4358:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066756e647320746f206d696e74",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4376:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8585e833d99a1c000f3a466454440e59c3dc0183e2a90633072ce9cf77619071",
                          "typeString": "literal_string \"not enough funds to mint\""
                        },
                        "value": "not enough funds to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8585e833d99a1c000f3a466454440e59c3dc0183e2a90633072ce9cf77619071",
                          "typeString": "literal_string \"not enough funds to mint\""
                        }
                      ],
                      "id": 431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1792,
                        1793
                      ],
                      "referencedDeclaration": 1793,
                      "src": "4350:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4350:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "4350:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "4434:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "_feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "4413:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4413:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4413:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "4413:25:3"
                }
              ]
            },
            "documentation": "@dev mint Mint new tokens, charge a fee.\n     Can be called only if the contract is not paused.\nCan be called only by the minter address.\nFee is paid via msg.value which must be >0\n@param address_to -- send minted tokens to this address\n@param num_tokens_minted -- # tokens to be minted",
            "id": 446,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 381,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 380,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1038,
                  "src": "3970:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3970:13:3"
              },
              {
                "arguments": null,
                "id": 383,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 382,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 234,
                  "src": "3984:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3984:10:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "address_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "3903:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "name": "num_tokens_minted",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "3923:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3923:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3902:47:3"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4000:0:3"
            },
            "scope": 587,
            "src": "3889:556:3",
            "stateMutability": "payable",
            "superFunction": 1725,
            "visibility": "public"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "4560:203:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 455,
                      "name": "num_tokens_minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "4572:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4592:2:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "4572:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 464,
                        "name": "num_tokens_minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "4645:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4665:3:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "4645:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 475,
                      "nodeType": "Block",
                      "src": "4738:19:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 473,
                            "name": "max_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "4747:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 454,
                          "id": 474,
                          "nodeType": "Return",
                          "src": "4740:14:3"
                        }
                      ]
                    },
                    "id": 476,
                    "nodeType": "IfStatement",
                    "src": "4641:116:3",
                    "trueBody": {
                      "id": 472,
                      "nodeType": "Block",
                      "src": "4670:27:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "35",
                                "id": 469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4691:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 467,
                                "name": "max_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 450,
                                "src": "4679:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1632,
                              "src": "4679:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4679:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 454,
                          "id": 471,
                          "nodeType": "Return",
                          "src": "4672:21:3"
                        }
                      ]
                    }
                  },
                  "id": 477,
                  "nodeType": "IfStatement",
                  "src": "4568:189:3",
                  "trueBody": {
                    "id": 463,
                    "nodeType": "Block",
                    "src": "4602:27:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3230",
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4623:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 458,
                              "name": "max_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "4611:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1632,
                            "src": "4611:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4611:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 454,
                        "id": 462,
                        "nodeType": "Return",
                        "src": "4604:22:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "name": "num_tokens_minted",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "4474:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "name": "max_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "4501:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4473:44:3"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "4547:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4547:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4546:9:3"
            },
            "scope": 587,
            "src": "4451:312:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "5032:30:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 486,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "5042:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5051:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5042:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "5042:13:3"
                }
              ]
            },
            "documentation": "@dev pause\n     Function that pauses the contract.\nCan be called only if the contract is not already paused.\nCan be called only by the minter address.",
            "id": 491,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 482,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 481,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1038,
                  "src": "5007:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5007:13:3"
              },
              {
                "arguments": null,
                "id": 484,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 483,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 234,
                  "src": "5021:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5021:10:3"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4997:2:3"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5032:0:3"
            },
            "scope": 587,
            "src": "4983:79:3",
            "stateMutability": "nonpayable",
            "superFunction": 1728,
            "visibility": "public"
          },
          {
            "body": {
              "id": 502,
              "nodeType": "Block",
              "src": "5313:31:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "5323:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5332:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5323:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "5323:14:3"
                }
              ]
            },
            "documentation": "@dev unpause\n     Function that unpauses the contract.\nCan be called only if the contract is paused.\nCan be called only by the minter address.",
            "id": 503,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 493,
                  "name": "onlyPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1047,
                  "src": "5291:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5291:10:3"
              },
              {
                "arguments": null,
                "id": 496,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 495,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 234,
                  "src": "5302:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5302:10:3"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5281:2:3"
            },
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5313:0:3"
            },
            "scope": 587,
            "src": "5265:79:3",
            "stateMutability": "nonpayable",
            "superFunction": 1731,
            "visibility": "public"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "5678:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 512,
                      "name": "_minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "5688:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 513,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "5698:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5688:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "5688:16:3"
                }
              ]
            },
            "documentation": "@dev setMinter\n     Function that sents a new minter address.\nCan be called only if the contract is not paused.\nCan be called only by the minter address.\n@param minter refers to a new minter address.",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 508,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 507,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1038,
                  "src": "5653:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5653:13:3"
              },
              {
                "arguments": null,
                "id": 510,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 509,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 234,
                  "src": "5667:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5667:10:3"
              }
            ],
            "name": "setMinter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 505,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5630:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5630:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5629:16:3"
            },
            "returnParameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5678:0:3"
            },
            "scope": 587,
            "src": "5611:100:3",
            "stateMutability": "nonpayable",
            "superFunction": 1736,
            "visibility": "public"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "5887:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 522,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 200,
                    "src": "5904:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 521,
                  "id": 523,
                  "nodeType": "Return",
                  "src": "5897:12:3"
                }
              ]
            },
            "documentation": "@dev name\n     Function that reads private variable name.\n@return DataToken name.",
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5849:2:3"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "5872:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5872:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5871:15:3"
            },
            "scope": 587,
            "src": "5836:80:3",
            "stateMutability": "view",
            "superFunction": 1741,
            "visibility": "public"
          },
          {
            "body": {
              "id": 532,
              "nodeType": "Block",
              "src": "6100:31:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 530,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 202,
                    "src": "6117:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 529,
                  "id": 531,
                  "nodeType": "Return",
                  "src": "6110:14:3"
                }
              ]
            },
            "documentation": "@dev symbol\n     Function that reads private variable symbol.\n@return DataToken symbol.",
            "id": 533,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6062:2:3"
            },
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "6085:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6085:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6084:15:3"
            },
            "scope": 587,
            "src": "6047:84:3",
            "stateMutability": "view",
            "superFunction": 1746,
            "visibility": "public"
          },
          {
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "6307:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 538,
                    "name": "_blob",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 204,
                    "src": "6324:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 537,
                  "id": 539,
                  "nodeType": "Return",
                  "src": "6317:12:3"
                }
              ]
            },
            "documentation": "@dev blob\n     Function that reads private variable blob.\n@return DataToken blob.",
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "blob",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6269:2:3"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "6292:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6292:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6291:15:3"
            },
            "scope": 587,
            "src": "6256:80:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "6522:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 546,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 208,
                    "src": "6539:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 545,
                  "id": 547,
                  "nodeType": "Return",
                  "src": "6532:16:3"
                }
              ]
            },
            "documentation": "@dev decimals\n     Function that reads private variable decimals.\n@return DataToken decimals.",
            "id": 549,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6490:2:3"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "6513:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6513:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6512:9:3"
            },
            "scope": 587,
            "src": "6473:82:3",
            "stateMutability": "view",
            "superFunction": 1751,
            "visibility": "public"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "6722:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 554,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 206,
                    "src": "6739:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 553,
                  "id": 555,
                  "nodeType": "Return",
                  "src": "6732:11:3"
                }
              ]
            },
            "documentation": "@dev cap\n     Function that reads private variable cap.\n@return DataToken cap.",
            "id": 557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6689:2:3"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 557,
                  "src": "6713:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6713:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6712:9:3"
            },
            "scope": 587,
            "src": "6677:73:3",
            "stateMutability": "view",
            "superFunction": 1756,
            "visibility": "public"
          },
          {
            "body": {
              "id": 569,
              "nodeType": "Block",
              "src": "7053:44:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 564,
                          "name": "_minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "7071:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 565,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "7082:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7071:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 567,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7070:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 563,
                  "id": 568,
                  "nodeType": "Return",
                  "src": "7063:27:3"
                }
              ]
            },
            "documentation": "@dev isMinter\n     Function takes the address and checks if it is a minter address.\n@param account refers to the address that will be checked if it is a minter address.\n@return DataToken cap.",
            "id": 570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMinter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "7010:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7010:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7009:17:3"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "7047:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7047:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7046:6:3"
            },
            "scope": 587,
            "src": "6992:105:3",
            "stateMutability": "view",
            "superFunction": 1763,
            "visibility": "public"
          },
          {
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "7330:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 575,
                    "name": "initialized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 198,
                    "src": "7347:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 574,
                  "id": 576,
                  "nodeType": "Return",
                  "src": "7340:18:3"
                }
              ]
            },
            "documentation": "@dev isInitialized\n     Function checks if the contract is initialized.\n@return true if the contract is initialized, false if it is not.",
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7301:2:3"
            },
            "returnParameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "7324:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7324:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7323:6:3"
            },
            "scope": 587,
            "src": "7279:86:3",
            "stateMutability": "view",
            "superFunction": 1768,
            "visibility": "public"
          },
          {
            "body": {
              "id": 585,
              "nodeType": "Block",
              "src": "7577:30:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 583,
                    "name": "paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1028,
                    "src": "7594:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 582,
                  "id": 584,
                  "nodeType": "Return",
                  "src": "7587:13:3"
                }
              ]
            },
            "documentation": "@dev isPaused\n     Function checks if the contract is paused.\n@return true if the contract is paused, false if it is not.",
            "id": 586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPaused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7548:2:3"
            },
            "returnParameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "7571:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7571:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7570:6:3"
            },
            "scope": 587,
            "src": "7531:76:3",
            "stateMutability": "view",
            "superFunction": 1773,
            "visibility": "public"
          }
        ],
        "scope": 588,
        "src": "462:7147:3"
      }
    ],
    "src": "0:7610:3"
  },
  "bytecode": "60806040526003805461ffff191690553480156200001c57600080fd5b5060405162001f1138038062001f11833981810160405260c08110156200004257600080fd5b81019080805160405193929190846401000000008211156200006357600080fd5b9083019060208201858111156200007957600080fd5b82516401000000008111828201881017156200009457600080fd5b82525081516020918201929091019080838360005b83811015620000c3578181015183820152602001620000a9565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b9083019060208201858111156200012b57600080fd5b82516401000000008111828201881017156200014657600080fd5b82525081516020918201929091019080838360005b83811015620001755781810151838201526020016200015b565b50505050905090810190601f168015620001a35780820380516001836020036101000a031916815260200191505b50604081815260208301519083015160609093018051919593949293929184640100000000821115620001d557600080fd5b908301906020820185811115620001eb57600080fd5b82516401000000008111828201881017156200020657600080fd5b82525081516020918201929091019080838360005b83811015620002355781810151838201526020016200021b565b50505050905090810190601f168015620002635780820380516001836020036101000a031916815260200191505b506040526020015191506200028890508686868686866001600160e01b036200029516565b5050505050505062000504565b60006001600160a01b038516620002de5760405162461bcd60e51b815260040180806020018281038252602781526020018062001ec76027913960400191505060405180910390fd5b6001600160a01b038216620003255760405162461bcd60e51b815260040180806020018281038252602381526020018062001eee6023913960400191505060405180910390fd5b6009546001600160a01b0316156200036f5760405162461bcd60e51b815260040180806020018281038252603081526020018062001e976030913960400191505060405180910390fd5b60008411620003c5576040805162461bcd60e51b815260206004820152601f60248201527f44617461546f6b656e54656d706c6174653a2043617020776173203c3d203000604482015290519081900360640190fd5b600060085560078490558651620003e49060049060208a01906200045f565b508251620003fa9060069060208601906200045f565b508551620004109060059060208901906200045f565b5050600980546001600160a01b039586166001600160a01b031991821617909155600a80549290951691161790925550506003805461ff00191661010090811791829055900460ff1692915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004a257805160ff1916838001178555620004d2565b82800160010185558215620004d2579182015b82811115620004d2578251825591602001919060010190620004b5565b50620004e0929150620004e4565b5090565b6200050191905b80821115620004e05760008155600101620004eb565b90565b61198380620005146000396000f3fe6080604052600436106101355760003560e01c80638456cb59116100ab578063aa271e1a1161006f578063aa271e1a146105e6578063b187bd2614610619578063d3ad1cbf1461062e578063dd62ed3e1461065e578063fca3b5aa14610699578063fde0e7a8146106cc57610135565b80638456cb59146103695780639070d2f81461037e57806395d89b411461055f578063a457c2d714610574578063a9059cbb146105ad57610135565b8063355274ea116100fd578063355274ea14610290578063392e53cd146102a557806339509351146102ba5780633f4ba83a146102f357806340c10f191461030a57806370a082311461033657610135565b806306fdde031461013a578063095ea7b3146101c457806318160ddd1461021157806323b872dd14610238578063313ce5671461027b575b600080fd5b34801561014657600080fd5b5061014f6106e1565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101d057600080fd5b506101fd600480360360408110156101e757600080fd5b506001600160a01b038135169060200135610778565b604080519115158252519081900360200190f35b34801561021d57600080fd5b506102266107d0565b60408051918252519081900360200190f35b34801561024457600080fd5b506101fd6004803603606081101561025b57600080fd5b506001600160a01b038135811691602081013590911690604001356107d6565b34801561028757600080fd5b5061022661082e565b34801561029c57600080fd5b50610226610834565b3480156102b157600080fd5b506101fd61083a565b3480156102c657600080fd5b506101fd600480360360408110156102dd57600080fd5b506001600160a01b038135169060200135610848565b3480156102ff57600080fd5b50610308610897565b005b6103086004803603604081101561032057600080fd5b506001600160a01b03813516906020013561092d565b34801561034257600080fd5b506102266004803603602081101561035957600080fd5b50356001600160a01b0316610ad6565b34801561037557600080fd5b50610308610af1565b34801561038a57600080fd5b506101fd600480360360c08110156103a157600080fd5b8101906020810181356401000000008111156103bc57600080fd5b8201836020820111156103ce57600080fd5b803590602001918460018302840111640100000000831117156103f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561044357600080fd5b82018360208201111561045557600080fd5b8035906020019184600183028401116401000000008311171561047757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160a01b03853516956020860135959194509250606081019150604001356401000000008111156104df57600080fd5b8201836020820111156104f157600080fd5b8035906020019184600183028401116401000000008311171561051357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160a01b03169150610b8b9050565b34801561056b57600080fd5b5061014f610bee565b34801561058057600080fd5b506101fd6004803603604081101561059757600080fd5b506001600160a01b038135169060200135610c4f565b3480156105b957600080fd5b506101fd600480360360408110156105d057600080fd5b506001600160a01b038135169060200135610c9e565b3480156105f257600080fd5b506101fd6004803603602081101561060957600080fd5b50356001600160a01b0316610ced565b34801561062557600080fd5b506101fd610d01565b34801561063a57600080fd5b506102266004803603604081101561065157600080fd5b5080359060200135610d0a565b34801561066a57600080fd5b506102266004803603604081101561068157600080fd5b506001600160a01b0381358116916020013516610d4e565b3480156106a557600080fd5b50610308600480360360208110156106bc57600080fd5b50356001600160a01b0316610d79565b3480156106d857600080fd5b5061014f610e26565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561076d5780601f106107425761010080835404028352916020019161076d565b820191906000526020600020905b81548152906001019060200180831161075057829003601f168201915b505050505090505b90565b60035460009060ff16156107bd5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6107c78383610e87565b90505b92915050565b60025490565b60035460009060ff161561081b5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b610826848484610ea4565b949350505050565b60085490565b60075490565b600354610100900460ff1690565b60035460009060ff161561088d5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6107c78383610f31565b60035460ff166108d85760405162461bcd60e51b81526004018080602001828103825260308152602001806118b36030913960400191505060405180910390fd5b6009546001600160a01b031633146109215760405162461bcd60e51b81526004018080602001828103825260218152602001806117d26021913960400191505060405180910390fd5b6003805460ff19169055565b60035460ff161561096f5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6009546001600160a01b031633146109b85760405162461bcd60e51b81526004018080602001828103825260218152602001806117d26021913960400191505060405180910390fd5b6007546109d3826109c76107d0565b9063ffffffff610f8516565b1115610a15576040805162461bcd60e51b815260206004820152600c60248201526b18d85c08195e18d95959195960a21b604482015290519081900360640190fd5b60005a9050610a248383610fdf565b60005a90508082033a81026000610a3b8683610d0a565b905080341015610a92576040805162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f7567682066756e647320746f206d696e740000000000000000604482015290519081900360640190fd5b600a546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610acc573d6000803e3d6000fd5b5050505050505050565b6001600160a01b031660009081526020819052604090205490565b60035460ff1615610b335760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6009546001600160a01b03163314610b7c5760405162461bcd60e51b81526004018080602001828103825260218152602001806117d26021913960400191505060405180910390fd5b6003805460ff19166001179055565b600354600090610100900460ff1615610bd55760405162461bcd60e51b81526004018080602001828103825260268152602001806118686026913960400191505060405180910390fd5b610be38787878787876110cf565b979650505050505050565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561076d5780601f106107425761010080835404028352916020019161076d565b60035460009060ff1615610c945760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6107c7838361128c565b60035460009060ff1615610ce35760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6107c783836112fa565b6009546001600160a01b0391821691161490565b60035460ff1690565b6000600a831015610d2d57610d2682601463ffffffff61130e16565b90506107ca565b6064831015610d4757610d2682600563ffffffff61130e16565b50806107ca565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60035460ff1615610dbb5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6009546001600160a01b03163314610e045760405162461bcd60e51b81526004018080602001828103825260218152602001806117d26021913960400191505060405180910390fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561076d5780601f106107425761010080835404028352916020019161076d565b6000610e9b610e94611350565b8484611354565b50600192915050565b6000610eb1848484611440565b610f2784610ebd611350565b610f2285604051806060016040528060288152602001611840602891396001600160a01b038a16600090815260016020526040812090610efb611350565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61159c16565b611354565b5060019392505050565b6000610e9b610f3e611350565b84610f228560016000610f4f611350565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610f8516565b6000828201838110156107c7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b03821661103a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025461104d908263ffffffff610f8516565b6002556001600160a01b038216600090815260208190526040902054611079908263ffffffff610f8516565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006001600160a01b0385166111165760405162461bcd60e51b81526004018080602001828103825260278152602001806118196027913960400191505060405180910390fd5b6001600160a01b03821661115b5760405162461bcd60e51b81526004018080602001828103825260238152602001806119076023913960400191505060405180910390fd5b6009546001600160a01b0316156111a35760405162461bcd60e51b81526004018080602001828103825260308152602001806117a26030913960400191505060405180910390fd5b600084116111f8576040805162461bcd60e51b815260206004820152601f60248201527f44617461546f6b656e54656d706c6174653a2043617020776173203c3d203000604482015290519081900360640190fd5b6000600855600784905586516112159060049060208a0190611698565b508251611229906006906020860190611698565b50855161123d906005906020890190611698565b5050600980546001600160a01b039586166001600160a01b031991821617909155600a80549290951691161790925550506003805461ff00191661010090811791829055900460ff1692915050565b6000610e9b611299611350565b84610f228560405180606001604052806025815260200161192a60259139600160006112c3611350565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61159c16565b6000610e9b611307611350565b8484611440565b60006107c783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611633565b3390565b6001600160a01b0383166113995760405162461bcd60e51b81526004018080602001828103825260248152602001806118e36024913960400191505060405180910390fd5b6001600160a01b0382166113de5760405162461bcd60e51b81526004018080602001828103825260228152602001806117806022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166114855760405162461bcd60e51b815260040180806020018281038252602581526020018061188e6025913960400191505060405180910390fd5b6001600160a01b0382166114ca5760405162461bcd60e51b81526004018080602001828103825260238152602001806117316023913960400191505060405180910390fd5b61150d816040518060600160405280602681526020016117f3602691396001600160a01b038616600090815260208190526040902054919063ffffffff61159c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611542908263ffffffff610f8516565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561162b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115f05781810151838201526020016115d8565b50505050905090810190601f16801561161d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836116825760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156115f05781810151838201526020016115d8565b50600083858161168e57fe5b0495945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116d957805160ff1916838001178555611706565b82800160010185558215611706579182015b828111156117065782518255916020019190600101906116eb565b50611712929150611716565b5090565b61077591905b80821115611712576000815560010161171c56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332305061757361626c653a207468697320746f6b656e20636f6e74726163742069732070617573656445524332303a20617070726f766520746f20746865207a65726f206164647265737344617461546f6b656e54656d706c6174653a20496e76616c6964206d696e7465722c206163636573732064656e69656444617461546f6b656e54656d706c6174653a20696e76616c6964206d696e74657245524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636544617461546f6b656e54656d706c6174653a204d696e746572206164647265737320776173203045524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636544617461546f6b656e54656d706c6174653a20616c726561647920696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332305061757361626c653a207468697320746f6b656e20636f6e7472616374206973206e6f742070617573656445524332303a20617070726f76652066726f6d20746865207a65726f206164647265737344617461546f6b656e54656d706c6174653a206665654164647265737320776173203045524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a7231582051dcce64305500bc94c5c5e7f6e0bf772d127261b0ea1bf7d040e993d6ca442c64736f6c6343000511003244617461546f6b656e54656d706c6174653a20496e76616c6964206d696e7465722c206163636573732064656e69656444617461546f6b656e54656d706c6174653a204d696e746572206164647265737320776173203044617461546f6b656e54656d706c6174653a2066656541646472657373207761732030",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "DataTokenTemplate",
  "coverageMap": {
    "branches": {
      "1": {},
      "10": {},
      "12": {
        "SafeMath.add": {
          "80": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "82": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.sub": {
          "81": [
            1845,
            1851,
            true
          ]
        }
      },
      "3": {
        "DataTokenTemplate._calculateFee": {
          "68": [
            4572,
            4594,
            false
          ],
          "69": [
            4645,
            4668,
            false
          ]
        },
        "DataTokenTemplate._initialize": {
          "70": [
            2997,
            3017,
            true
          ],
          "71": [
            3077,
            3101,
            true
          ],
          "72": [
            3157,
            3178,
            true
          ],
          "73": [
            3247,
            3254,
            true
          ]
        },
        "DataTokenTemplate.mint": {
          "66": [
            4018,
            4062,
            true
          ],
          "67": [
            4358,
            4374,
            true
          ]
        }
      },
      "5": {
        "ERC20._approve": {
          "75": [
            7426,
            7445,
            true
          ],
          "76": [
            7504,
            7525,
            true
          ]
        },
        "ERC20._mint": {
          "74": [
            6020,
            6041,
            true
          ]
        },
        "ERC20._transfer": {
          "77": [
            5308,
            5328,
            true
          ],
          "78": [
            5388,
            5411,
            true
          ]
        }
      },
      "6": {
        "DataTokenTemplate.unpause": {
          "79": [
            673,
            679,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "1": {
        "Context._msgSender": {
          "54": [
            860,
            877
          ]
        }
      },
      "10": {},
      "12": {
        "SafeMath.add": {
          "33": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "53": [
            3150,
            3196
          ],
          "65": [
            3889,
            3917
          ]
        },
        "SafeMath.sub": {
          "64": [
            1837,
            1866
          ]
        }
      },
      "3": {
        "DataTokenTemplate._calculateFee": {
          "21": [
            4604,
            4626
          ],
          "22": [
            4672,
            4693
          ],
          "23": [
            4740,
            4754
          ]
        },
        "DataTokenTemplate._initialize": {
          "38": [
            2989,
            3061
          ],
          "39": [
            3069,
            3141
          ],
          "40": [
            3149,
            3231
          ],
          "41": [
            3239,
            3290
          ],
          "42": [
            3309,
            3322
          ],
          "43": [
            3332,
            3342
          ],
          "44": [
            3352,
            3364
          ],
          "45": [
            3374,
            3386
          ],
          "46": [
            3396,
            3412
          ],
          "47": [
            3422,
            3438
          ],
          "48": [
            3441,
            3465
          ],
          "49": [
            3475,
            3493
          ],
          "50": [
            3503,
            3521
          ]
        },
        "DataTokenTemplate.blob": {
          "26": [
            6317,
            6329
          ]
        },
        "DataTokenTemplate.cap": {
          "5": [
            6732,
            6743
          ]
        },
        "DataTokenTemplate.decimals": {
          "4": [
            6532,
            6548
          ]
        },
        "DataTokenTemplate.initialize": {
          "15": [
            2325,
            2388
          ]
        },
        "DataTokenTemplate.isInitialized": {
          "6": [
            7340,
            7358
          ]
        },
        "DataTokenTemplate.isMinter": {
          "19": [
            7063,
            7090
          ]
        },
        "DataTokenTemplate.isPaused": {
          "20": [
            7587,
            7600
          ]
        },
        "DataTokenTemplate.mint": {
          "9": [
            4010,
            4079
          ],
          "10": [
            4123,
            4159
          ],
          "11": [
            4350,
            4403
          ],
          "12": [
            4413,
            4438
          ]
        },
        "DataTokenTemplate.name": {
          "0": [
            5897,
            5909
          ]
        },
        "DataTokenTemplate.pause": {
          "14": [
            5042,
            5055
          ]
        },
        "DataTokenTemplate.setMinter": {
          "25": [
            5688,
            5704
          ]
        },
        "DataTokenTemplate.symbol": {
          "16": [
            6110,
            6124
          ]
        },
        "DataTokenTemplate.unpause": {
          "8": [
            5323,
            5337
          ]
        }
      },
      "5": {
        "ERC20._approve": {
          "55": [
            7418,
            7486
          ],
          "56": [
            7496,
            7564
          ],
          "57": [
            7575,
            7611
          ],
          "58": [
            7621,
            7658
          ]
        },
        "ERC20._mint": {
          "34": [
            6012,
            6077
          ],
          "35": [
            6088,
            6127
          ],
          "36": [
            6137,
            6188
          ],
          "37": [
            6198,
            6240
          ]
        },
        "ERC20._transfer": {
          "59": [
            5300,
            5370
          ],
          "60": [
            5380,
            5451
          ],
          "61": [
            5462,
            5553
          ],
          "62": [
            5563,
            5618
          ],
          "63": [
            5628,
            5668
          ]
        },
        "ERC20.allowance": {
          "24": [
            2304,
            2338
          ]
        },
        "ERC20.approve": {
          "27": [
            2565,
            2604
          ],
          "28": [
            2614,
            2625
          ]
        },
        "ERC20.balanceOf": {
          "13": [
            1765,
            1790
          ]
        },
        "ERC20.decreaseAllowance": {
          "51": [
            4580,
            4709
          ]
        },
        "ERC20.increaseAllowance": {
          "32": [
            3881,
            3964
          ]
        },
        "ERC20.totalSupply": {
          "2": [
            1605,
            1624
          ]
        },
        "ERC20.transfer": {
          "52": [
            2085,
            2127
          ]
        },
        "ERC20.transferFrom": {
          "29": [
            3195,
            3231
          ],
          "30": [
            3241,
            3362
          ],
          "31": [
            3372,
            3383
          ]
        }
      },
      "6": {
        "ERC20Pausable.approve": {
          "1": [
            2531,
            2567
          ]
        },
        "ERC20Pausable.decreaseAllowance": {
          "17": [
            3841,
            3897
          ]
        },
        "ERC20Pausable.increaseAllowance": {
          "7": [
            3171,
            3222
          ]
        },
        "ERC20Pausable.transfer": {
          "18": [
            1290,
            1322
          ]
        },
        "ERC20Pausable.transferFrom": {
          "3": [
            1950,
            1992
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "Context",
    "ERC20",
    "ERC20Pausable",
    "IERC20",
    "IERC20Template",
    "SafeMath"
  ],
  "deployedBytecode": "6080604052600436106101355760003560e01c80638456cb59116100ab578063aa271e1a1161006f578063aa271e1a146105e6578063b187bd2614610619578063d3ad1cbf1461062e578063dd62ed3e1461065e578063fca3b5aa14610699578063fde0e7a8146106cc57610135565b80638456cb59146103695780639070d2f81461037e57806395d89b411461055f578063a457c2d714610574578063a9059cbb146105ad57610135565b8063355274ea116100fd578063355274ea14610290578063392e53cd146102a557806339509351146102ba5780633f4ba83a146102f357806340c10f191461030a57806370a082311461033657610135565b806306fdde031461013a578063095ea7b3146101c457806318160ddd1461021157806323b872dd14610238578063313ce5671461027b575b600080fd5b34801561014657600080fd5b5061014f6106e1565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101d057600080fd5b506101fd600480360360408110156101e757600080fd5b506001600160a01b038135169060200135610778565b604080519115158252519081900360200190f35b34801561021d57600080fd5b506102266107d0565b60408051918252519081900360200190f35b34801561024457600080fd5b506101fd6004803603606081101561025b57600080fd5b506001600160a01b038135811691602081013590911690604001356107d6565b34801561028757600080fd5b5061022661082e565b34801561029c57600080fd5b50610226610834565b3480156102b157600080fd5b506101fd61083a565b3480156102c657600080fd5b506101fd600480360360408110156102dd57600080fd5b506001600160a01b038135169060200135610848565b3480156102ff57600080fd5b50610308610897565b005b6103086004803603604081101561032057600080fd5b506001600160a01b03813516906020013561092d565b34801561034257600080fd5b506102266004803603602081101561035957600080fd5b50356001600160a01b0316610ad6565b34801561037557600080fd5b50610308610af1565b34801561038a57600080fd5b506101fd600480360360c08110156103a157600080fd5b8101906020810181356401000000008111156103bc57600080fd5b8201836020820111156103ce57600080fd5b803590602001918460018302840111640100000000831117156103f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561044357600080fd5b82018360208201111561045557600080fd5b8035906020019184600183028401116401000000008311171561047757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160a01b03853516956020860135959194509250606081019150604001356401000000008111156104df57600080fd5b8201836020820111156104f157600080fd5b8035906020019184600183028401116401000000008311171561051357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160a01b03169150610b8b9050565b34801561056b57600080fd5b5061014f610bee565b34801561058057600080fd5b506101fd6004803603604081101561059757600080fd5b506001600160a01b038135169060200135610c4f565b3480156105b957600080fd5b506101fd600480360360408110156105d057600080fd5b506001600160a01b038135169060200135610c9e565b3480156105f257600080fd5b506101fd6004803603602081101561060957600080fd5b50356001600160a01b0316610ced565b34801561062557600080fd5b506101fd610d01565b34801561063a57600080fd5b506102266004803603604081101561065157600080fd5b5080359060200135610d0a565b34801561066a57600080fd5b506102266004803603604081101561068157600080fd5b506001600160a01b0381358116916020013516610d4e565b3480156106a557600080fd5b50610308600480360360208110156106bc57600080fd5b50356001600160a01b0316610d79565b3480156106d857600080fd5b5061014f610e26565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561076d5780601f106107425761010080835404028352916020019161076d565b820191906000526020600020905b81548152906001019060200180831161075057829003601f168201915b505050505090505b90565b60035460009060ff16156107bd5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6107c78383610e87565b90505b92915050565b60025490565b60035460009060ff161561081b5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b610826848484610ea4565b949350505050565b60085490565b60075490565b600354610100900460ff1690565b60035460009060ff161561088d5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6107c78383610f31565b60035460ff166108d85760405162461bcd60e51b81526004018080602001828103825260308152602001806118b36030913960400191505060405180910390fd5b6009546001600160a01b031633146109215760405162461bcd60e51b81526004018080602001828103825260218152602001806117d26021913960400191505060405180910390fd5b6003805460ff19169055565b60035460ff161561096f5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6009546001600160a01b031633146109b85760405162461bcd60e51b81526004018080602001828103825260218152602001806117d26021913960400191505060405180910390fd5b6007546109d3826109c76107d0565b9063ffffffff610f8516565b1115610a15576040805162461bcd60e51b815260206004820152600c60248201526b18d85c08195e18d95959195960a21b604482015290519081900360640190fd5b60005a9050610a248383610fdf565b60005a90508082033a81026000610a3b8683610d0a565b905080341015610a92576040805162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f7567682066756e647320746f206d696e740000000000000000604482015290519081900360640190fd5b600a546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610acc573d6000803e3d6000fd5b5050505050505050565b6001600160a01b031660009081526020819052604090205490565b60035460ff1615610b335760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6009546001600160a01b03163314610b7c5760405162461bcd60e51b81526004018080602001828103825260218152602001806117d26021913960400191505060405180910390fd5b6003805460ff19166001179055565b600354600090610100900460ff1615610bd55760405162461bcd60e51b81526004018080602001828103825260268152602001806118686026913960400191505060405180910390fd5b610be38787878787876110cf565b979650505050505050565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561076d5780601f106107425761010080835404028352916020019161076d565b60035460009060ff1615610c945760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6107c7838361128c565b60035460009060ff1615610ce35760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6107c783836112fa565b6009546001600160a01b0391821691161490565b60035460ff1690565b6000600a831015610d2d57610d2682601463ffffffff61130e16565b90506107ca565b6064831015610d4757610d2682600563ffffffff61130e16565b50806107ca565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60035460ff1615610dbb5760405162461bcd60e51b815260040180806020018281038252602c815260200180611754602c913960400191505060405180910390fd5b6009546001600160a01b03163314610e045760405162461bcd60e51b81526004018080602001828103825260218152602001806117d26021913960400191505060405180910390fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561076d5780601f106107425761010080835404028352916020019161076d565b6000610e9b610e94611350565b8484611354565b50600192915050565b6000610eb1848484611440565b610f2784610ebd611350565b610f2285604051806060016040528060288152602001611840602891396001600160a01b038a16600090815260016020526040812090610efb611350565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61159c16565b611354565b5060019392505050565b6000610e9b610f3e611350565b84610f228560016000610f4f611350565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610f8516565b6000828201838110156107c7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b03821661103a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025461104d908263ffffffff610f8516565b6002556001600160a01b038216600090815260208190526040902054611079908263ffffffff610f8516565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006001600160a01b0385166111165760405162461bcd60e51b81526004018080602001828103825260278152602001806118196027913960400191505060405180910390fd5b6001600160a01b03821661115b5760405162461bcd60e51b81526004018080602001828103825260238152602001806119076023913960400191505060405180910390fd5b6009546001600160a01b0316156111a35760405162461bcd60e51b81526004018080602001828103825260308152602001806117a26030913960400191505060405180910390fd5b600084116111f8576040805162461bcd60e51b815260206004820152601f60248201527f44617461546f6b656e54656d706c6174653a2043617020776173203c3d203000604482015290519081900360640190fd5b6000600855600784905586516112159060049060208a0190611698565b508251611229906006906020860190611698565b50855161123d906005906020890190611698565b5050600980546001600160a01b039586166001600160a01b031991821617909155600a80549290951691161790925550506003805461ff00191661010090811791829055900460ff1692915050565b6000610e9b611299611350565b84610f228560405180606001604052806025815260200161192a60259139600160006112c3611350565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61159c16565b6000610e9b611307611350565b8484611440565b60006107c783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611633565b3390565b6001600160a01b0383166113995760405162461bcd60e51b81526004018080602001828103825260248152602001806118e36024913960400191505060405180910390fd5b6001600160a01b0382166113de5760405162461bcd60e51b81526004018080602001828103825260228152602001806117806022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166114855760405162461bcd60e51b815260040180806020018281038252602581526020018061188e6025913960400191505060405180910390fd5b6001600160a01b0382166114ca5760405162461bcd60e51b81526004018080602001828103825260238152602001806117316023913960400191505060405180910390fd5b61150d816040518060600160405280602681526020016117f3602691396001600160a01b038616600090815260208190526040902054919063ffffffff61159c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611542908263ffffffff610f8516565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561162b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115f05781810151838201526020016115d8565b50505050905090810190601f16801561161d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836116825760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156115f05781810151838201526020016115d8565b50600083858161168e57fe5b0495945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116d957805160ff1916838001178555611706565b82800160010185558215611706579182015b828111156117065782518255916020019190600101906116eb565b50611712929150611716565b5090565b61077591905b80821115611712576000815560010161171c56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332305061757361626c653a207468697320746f6b656e20636f6e74726163742069732070617573656445524332303a20617070726f766520746f20746865207a65726f206164647265737344617461546f6b656e54656d706c6174653a20496e76616c6964206d696e7465722c206163636573732064656e69656444617461546f6b656e54656d706c6174653a20696e76616c6964206d696e74657245524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636544617461546f6b656e54656d706c6174653a204d696e746572206164647265737320776173203045524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636544617461546f6b656e54656d706c6174653a20616c726561647920696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332305061757361626c653a207468697320746f6b656e20636f6e7472616374206973206e6f742070617573656445524332303a20617070726f76652066726f6d20746865207a65726f206164647265737344617461546f6b656e54656d706c6174653a206665654164647265737320776173203045524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a7231582051dcce64305500bc94c5c5e7f6e0bf772d127261b0ea1bf7d040e993d6ca442c64736f6c63430005110032",
  "deployedSourceMap": "462:7147:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5836:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5836:80:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5836:80:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:193:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2381:193:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2381:193:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1542:89:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1542:89:5;;;:::i;:::-;;;;;;;;;;;;;;;;1777:222:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1777:222:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1777:222:6;;;;;;;;;;;;;;;;;:::i;6473:82:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6473:82:3;;;:::i;6677:73::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6677:73:3;;;:::i;7279:86::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7279:86:3;;;:::i;3006:223:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3006:223:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3006:223:6;;;;;;;;:::i;5265:79:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5265:79:3;;;:::i;:::-;;3889:556;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3889:556:3;;;;;;;;:::i;1689:108:5:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1689:108:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1689:108:5;-1:-1:-1;;;;;1689:108:5;;:::i;4983:79:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4983:79:3;;;:::i;2062:333::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2062:333:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2062:333:3;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2062:333:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2062:333:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2062:333:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2062:333:3;;;;;;;;-1:-1:-1;2062:333:3;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;2062:333:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2062:333:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2062:333:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2062:333:3;;-1:-1:-1;;;;;2062:333:3;;;;;;;;;;;-1:-1:-1;2062:333:3;-1:-1:-1;2062:333:3;;;;-1:-1:-1;2062:333:3;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2062:333:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2062:333:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2062:333:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2062:333:3;;-1:-1:-1;;;2062:333:3;;-1:-1:-1;;;;;2062:333:3;;-1:-1:-1;2062:333:3;;-1:-1:-1;2062:333:3:i;6047:84::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6047:84:3;;;:::i;3671:233:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3671:233:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3671:233:6;;;;;;;;:::i;1144:185::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1144:185:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1144:185:6;;;;;;;;:::i;6992:105:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6992:105:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6992:105:3;-1:-1:-1;;;;;6992:105:3;;:::i;7531:76::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7531:76:3;;;:::i;4451:312::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4451:312:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4451:312:3;;;;;;;:::i;2213:132:5:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2213:132:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2213:132:5;;;;;;;;;;:::i;5611:100:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5611:100:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5611:100:3;-1:-1:-1;;;;;5611:100:3;;:::i;6256:80::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6256:80:3;;;:::i;5836:::-;5904:5;5897:12;;;;;;;;-1:-1:-1;;5897:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5872:13;;5897:12;;5904:5;;5897:12;;5904:5;5897:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5836:80;;:::o;2381:193:6:-;519:6;;2510:4;;519:6;;518:7;497:99;;;;-1:-1:-1;;;497:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:29;2552:7;2561:5;2538:13;:29::i;:::-;2531:36;;606:1;2381:193;;;;:::o;1542:89:5:-;1612:12;;1542:89;:::o;1777:222:6:-;519:6;;1929:4;;519:6;;518:7;497:99;;;;-1:-1:-1;;;497:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:35;1976:4;1982:2;1986:5;1957:18;:35::i;:::-;1950:42;1777:222;-1:-1:-1;;;;1777:222:6:o;6473:82:3:-;6539:9;;6473:82;:::o;6677:73::-;6739:4;;6677:73;:::o;7279:86::-;7347:11;;;;;;;;7279:86::o;3006:223:6:-;519:6;;3150:4;;519:6;;518:7;497:99;;;;-1:-1:-1;;;497:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3178:44;3202:7;3211:10;3178:23;:44::i;5265:79:3:-;673:6:6;;;;652:102;;;;-1:-1:-1;;;652:102:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:7:3;;-1:-1:-1;;;;;1004:7:3;990:10;:21;982:67;;;;-1:-1:-1;;;982:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5323:6;:14;;-1:-1:-1;;5323:14:3;;;5265:79::o;3889:556::-;519:6:6;;;;518:7;497:99;;;;-1:-1:-1;;;497:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:7:3;;-1:-1:-1;;;;;1004:7:3;990:10;:21;982:67;;;;-1:-1:-1;;;982:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4058:4;;4018:36;4036:17;4018:13;:11;:13::i;:::-;:17;:36;:17;:36;:::i;:::-;:44;;4010:69;;;;;-1:-1:-1;;;4010:69:3;;;;;;;;;;;;-1:-1:-1;;;4010:69:3;;;;;;;;;;;;;;;4083:18;4104:9;4083:30;;4123:36;4129:10;4141:17;4123:5;:36::i;:::-;4162:17;4182:9;4162:29;-1:-1:-1;4215:22:3;;;4269:11;4258:22;;4196:16;4297:41;4311:17;4258:22;4297:13;:41::i;:::-;4283:55;;4371:3;4358:9;:16;;4350:53;;;;;-1:-1:-1;;;4350:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4413:11;;:25;;-1:-1:-1;;;;;4413:11:3;;;;:25;;;;;4434:3;;4413:11;:25;:11;:25;4434:3;4413:11;:25;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4413:25:3;1059:1;;;;;3889:556;;:::o;1689:108:5:-;-1:-1:-1;;;;;1772:18:5;1746:7;1772:18;;;;;;;;;;;;1689:108::o;4983:79:3:-;519:6:6;;;;518:7;497:99;;;;-1:-1:-1;;;497:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:7:3;;-1:-1:-1;;;;;1004:7:3;990:10;:21;982:67;;;;-1:-1:-1;;;982:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5042:6;:13;;-1:-1:-1;;5042:13:3;5051:4;5042:13;;;4983:79::o;2062:333::-;868:11;;2307:4;;868:11;;;;;867:12;859:63;;;;-1:-1:-1;;;859:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2332:56;2344:4;2350:6;2358;2366:3;2371:4;2377:10;2332:11;:56::i;:::-;2325:63;2062:333;-1:-1:-1;;;;;;;2062:333:3:o;6047:84::-;6117:7;6110:14;;;;;;;;-1:-1:-1;;6110:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6085:13;;6110:14;;6117:7;;6110:14;;6117:7;6110:14;;;;;;;;;;;;;;;;;;;;;;;;3671:233:6;519:6;;3820:4;;519:6;;518:7;497:99;;;;-1:-1:-1;;;497:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3848:49;3872:7;3881:15;3848:23;:49::i;1144:185::-;519:6;;1269:4;;519:6;;518:7;497:99;;;;-1:-1:-1;;;497:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:25;1312:2;1316:5;1297:14;:25::i;6992:105:3:-;7071:7;;-1:-1:-1;;;;;7071:18:3;;;:7;;:18;;6992:105::o;7531:76::-;7594:6;;;;7531:76;:::o;4451:312::-;4547:7;4592:2;4572:17;:22;4568:189;;;4611:15;:7;4623:2;4611:15;:11;:15;:::i;:::-;4604:22;;;;4568:189;4665:3;4645:17;:23;4641:116;;;4679:14;:7;4691:1;4679:14;:11;:14;:::i;4641:116::-;-1:-1:-1;4747:7:3;4740:14;;2213:132:5;-1:-1:-1;;;;;2311:18:5;;;2285:7;2311:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2213:132::o;5611:100:3:-;519:6:6;;;;518:7;497:99;;;;-1:-1:-1;;;497:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:7:3;;-1:-1:-1;;;;;1004:7:3;990:10;:21;982:67;;;;-1:-1:-1;;;982:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5688:7;:16;;-1:-1:-1;;;;;;5688:16:3;-1:-1:-1;;;;;5688:16:3;;;;;;;;;;5611:100::o;6256:80::-;6324:5;6317:12;;;;;;;;-1:-1:-1;;6317:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6292:13;;6317:12;;6324:5;;6317:12;;6324:5;6317:12;;;;;;;;;;;;;;;;;;;;;;;;2483:149:5;2549:4;2565:39;2574:12;:10;:12::i;:::-;2588:7;2597:6;2565:8;:39::i;:::-;-1:-1:-1;2621:4:5;2483:149;;;;:::o;3090:300::-;3179:4;3195:36;3205:6;3213:9;3224:6;3195:9;:36::i;:::-;3241:121;3250:6;3258:12;:10;:12::i;:::-;3272:89;3310:6;3272:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3272:19:5;;;;;;:11;:19;;;;;;3292:12;:10;:12::i;:::-;-1:-1:-1;;;;;3272:33:5;;;;;;;;;;;;-1:-1:-1;3272:33:5;;;:89;;:37;:89;:::i;:::-;3241:8;:121::i;:::-;-1:-1:-1;3379:4:5;3090:300;;;;;:::o;3785:207::-;3865:4;3881:83;3890:12;:10;:12::i;:::-;3904:7;3913:50;3952:10;3913:11;:25;3925:12;:10;:12::i;:::-;-1:-1:-1;;;;;3913:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;3913:25:5;;;:34;;;;;;;;;;;:50;:38;:50;:::i;834:176:12:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;5945:302:5;-1:-1:-1;;;;;6020:21:5;;6012:65;;;;;-1:-1:-1;;;6012:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;6103:12;;:24;;6120:6;6103:24;:16;:24;:::i;:::-;6088:12;:39;-1:-1:-1;;;;;6158:18:5;;:9;:18;;;;;;;;;;;:30;;6181:6;6158:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6137:18:5;;:9;:18;;;;;;;;;;;:51;;;;6203:37;;;;;;;6137:18;;:9;;6203:37;;;;;;;;;;5945:302;;:::o;2744:784:3:-;2971:4;-1:-1:-1;;;;;2997:20:3;;2989:72;;;;-1:-1:-1;;;2989:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3077:24:3;;3069:72;;;;-1:-1:-1;;;3069:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3157:7;;-1:-1:-1;;;;;3157:7:3;:21;3149:82;;;;-1:-1:-1;;;3149:82:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3253:1;3247:3;:7;3239:51;;;;;-1:-1:-1;;;3239:51:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;3321:1;3309:9;:13;3332:4;:10;;;3352:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3374:12:3;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3396:16:3;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;3422:7:3;:16;;-1:-1:-1;;;;;3422:16:3;;;-1:-1:-1;;;;;;3422:16:3;;;;;;;3441:11;:24;;;;;;;;;;;;-1:-1:-1;;3475:11:3;:18;;-1:-1:-1;;3475:18:3;3422:16;3475:18;;;;;;;3510:11;;3475:18;3510:11;;;-1:-1:-1;;2744:784:3:o;4479:258:5:-;4564:4;4580:129;4589:12;:10;:12::i;:::-;4603:7;4612:96;4651:15;4612:96;;;;;;;;;;;;;;;;;:11;:25;4624:12;:10;:12::i;:::-;-1:-1:-1;;;;;4612:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;4612:25:5;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2000:155::-;2069:4;2085:42;2095:12;:10;:12::i;:::-;2109:9;2120:6;2085:9;:42::i;3073:130:12:-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;788:96:1:-;867:10;788:96;:::o;7333:332:5:-;-1:-1:-1;;;;;7426:19:5;;7418:68;;;;-1:-1:-1;;;7418:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7504:21:5;;7496:68;;;;-1:-1:-1;;;7496:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7575:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7626:32;;;;;;;;;;;;;;;;;7333:332;;;:::o;5211:464::-;-1:-1:-1;;;;;5308:20:5;;5300:70;;;;-1:-1:-1;;;5300:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5388:23:5;;5380:71;;;;-1:-1:-1;;;5380:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482;5504:6;5482:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:17:5;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5462:17:5;;;:9;:17;;;;;;;;;;;:91;;;;5586:20;;;;;;;:32;;5611:6;5586:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5563:20:5;;;:9;:20;;;;;;;;;;;;:55;;;;5633:35;;;;;;;5563:20;;5633:35;;;;;;;;;;;;;5211:464;;;:::o;1732:187:12:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:12;;;1732:187::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:12;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:12:o;462:7147:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;462:7147:3;;;-1:-1:-1;462:7147:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "DataTokenTemplate is a DataToken ERC20 compliant template     Used by the factory contract as a bytecode reference to deploy new DataTokens.",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "approve     Standard ERC20 approve function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "spender": "refers to an address that is allowed to spend tokens.",
          "value": "refers to amount of tokens that could be spent."
        },
        "return": "true if approval is success, false otherwise."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "blob()": {
        "details": "blob     Function that reads private variable blob.",
        "return": "DataToken blob."
      },
      "cap()": {
        "details": "cap     Function that reads private variable cap.",
        "return": "DataToken cap."
      },
      "constructor": {
        "details": "constructor     Called on contract deployment.  Could not be called with zero address parameters.",
        "params": {
          "feeAddress": "-- address that receives fees",
          "minter": "-- address with the right to mint()",
          "name": "-- token name",
          "symbol": "-- token symbol"
        }
      },
      "decimals()": {
        "details": "decimals     Function that reads private variable decimals.",
        "return": "DataToken decimals."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "decreaseAllowance     Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "spender": "refers to an address that is allowed to spend tokens.",
          "subtractedValue": "refers to an subtracted amount of tokens that could be spent."
        },
        "return": "true if allowance is decreased successfully, false otherwise."
      },
      "increaseAllowance(address,uint256)": {
        "details": "increaseAllowance     Standard ERC20 increaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "addedValue": "refers to an added amount of tokens that could be spent.",
          "spender": "refers to an address that is allowed to spend tokens."
        },
        "return": "true if allowance is increased successfully, false otherwise."
      },
      "initialize(string,string,address,uint256,string,address)": {
        "details": "initialize     Called on contract initialization. Used on new DataToken instance setup. Calls private _initialize function. Only if contract is not initialized.",
        "params": {
          "feeAddress": "-- address that receives fees",
          "minter": "-- address with the right to mint()",
          "name": "-- token name",
          "symbol": "-- token symbol"
        }
      },
      "isInitialized()": {
        "details": "isInitialized     Function checks if the contract is initialized.",
        "return": "true if the contract is initialized, false if it is not."
      },
      "isMinter(address)": {
        "details": "isMinter     Function takes the address and checks if it is a minter address.",
        "params": {
          "account": "refers to the address that will be checked if it is a minter address."
        },
        "return": "DataToken cap."
      },
      "isPaused()": {
        "details": "isPaused     Function checks if the contract is paused.",
        "return": "true if the contract is paused, false if it is not."
      },
      "mint(address,uint256)": {
        "details": "mint Mint new tokens, charge a fee.     Can be called only if the contract is not paused. Can be called only by the minter address. Fee is paid via msg.value which must be >0",
        "params": {
          "address_to": "-- send minted tokens to this address",
          "num_tokens_minted": "-- # tokens to be minted"
        }
      },
      "name()": {
        "details": "name     Function that reads private variable name.",
        "return": "DataToken name."
      },
      "pause()": {
        "details": "pause     Function that pauses the contract. Can be called only if the contract is not already paused. Can be called only by the minter address."
      },
      "setMinter(address)": {
        "details": "setMinter     Function that sents a new minter address. Can be called only if the contract is not paused. Can be called only by the minter address.",
        "params": {
          "minter": "refers to a new minter address."
        }
      },
      "symbol()": {
        "details": "symbol     Function that reads private variable symbol.",
        "return": "DataToken symbol."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "transfer     Standard ERC20 transfer function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "to": "refers to an address that tokens are tranfered to.",
          "value": "refers to amount of tokens being tranfered."
        },
        "return": "true if transfer is success, false otherwise."
      },
      "transferFrom(address,address,uint256)": {
        "details": "transfer     Standard ERC20 transferFrom function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "from": "refers to an address that tokens are tranfered from.",
          "to": "refers to an address that tokens are tranfered to.",
          "value": "refers to amount of tokens being tranfered."
        },
        "return": "true if transfer is success, false otherwise."
      },
      "unpause()": {
        "details": "unpause     Function that unpauses the contract. Can be called only if the contract is paused. Can be called only by the minter address."
      }
    },
    "title": "DataTokenTemplate "
  },
  "offset": [
    462,
    7609
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAA271E1A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0xD3AD1CBF EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xFDE0E7A8 EQ PUSH2 0x6CC JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x9070D2F8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5AD JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x355274EA GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x336 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x7D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x82E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x834 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x848 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x897 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x92D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0xAF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 CALLDATALOAD AND SWAP6 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0x60 DUP2 ADD SWAP2 POP PUSH1 0x40 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xB8B SWAP1 POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0xBEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xD01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xD4E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x76D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x742 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x750 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1754 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7C7 DUP4 DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1754 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x826 DUP5 DUP5 DUP5 PUSH2 0xEA4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1754 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7C7 DUP4 DUP4 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18B3 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17D2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1754 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17D2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x9D3 DUP3 PUSH2 0x9C7 PUSH2 0x7D0 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF85 AND JUMP JUMPDEST GT ISZERO PUSH2 0xA15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x18D85C08195E18D959591959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH2 0xA24 DUP4 DUP4 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x0 GAS SWAP1 POP DUP1 DUP3 SUB GASPRICE DUP2 MUL PUSH1 0x0 PUSH2 0xA3B DUP7 DUP4 PUSH2 0xD0A JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xA92 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682066756E647320746F206D696E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xACC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1754 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17D2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1868 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE3 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10CF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x76D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x742 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1754 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7C7 DUP4 DUP4 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xCE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1754 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7C7 DUP4 DUP4 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP4 LT ISZERO PUSH2 0xD2D JUMPI PUSH2 0xD26 DUP3 PUSH1 0x14 PUSH4 0xFFFFFFFF PUSH2 0x130E AND JUMP JUMPDEST SWAP1 POP PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x64 DUP4 LT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD26 DUP3 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x130E AND JUMP JUMPDEST POP DUP1 PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1754 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17D2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x76D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x742 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9B PUSH2 0xE94 PUSH2 0x1350 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1354 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB1 DUP5 DUP5 DUP5 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0xF27 DUP5 PUSH2 0xEBD PUSH2 0x1350 JUMP JUMPDEST PUSH2 0xF22 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1840 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xEFB PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x159C AND JUMP JUMPDEST PUSH2 0x1354 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9B PUSH2 0xF3E PUSH2 0x1350 JUMP JUMPDEST DUP5 PUSH2 0xF22 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xF4F PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF85 AND JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x103A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x104D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xF85 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1079 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xF85 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1819 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x115B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1907 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17A2 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x11F8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44617461546F6B656E54656D706C6174653A2043617020776173203C3D203000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SSTORE PUSH1 0x7 DUP5 SWAP1 SSTORE DUP7 MLOAD PUSH2 0x1215 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x1698 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x1229 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x1698 JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0x123D SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x1698 JUMP JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP3 SWAP1 SWAP6 AND SWAP2 AND OR SWAP1 SWAP3 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 SWAP1 DUP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DIV PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9B PUSH2 0x1299 PUSH2 0x1350 JUMP JUMPDEST DUP5 PUSH2 0xF22 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x192A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x12C3 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x159C AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9B PUSH2 0x1307 PUSH2 0x1350 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1633 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1399 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1780 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1485 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x188E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1731 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x150D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x159C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1542 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xF85 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x162B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15F0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15D8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1682 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x15F0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15D8 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x168E JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x16D9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1706 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1706 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16EB JUMP JUMPDEST POP PUSH2 0x1712 SWAP3 SWAP2 POP PUSH2 0x1716 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1712 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x171C JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS POP PUSH2 0x7573 PUSH2 0x626C PUSH6 0x3A2074686973 KECCAK256 PUSH21 0x6F6B656E20636F6E74726163742069732070617573 PUSH6 0x644552433230 GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737344617461546F6B656E54656D706C6174 PUSH6 0x3A20496E7661 PUSH13 0x6964206D696E7465722C206163 PUSH4 0x65737320 PUSH5 0x656E696564 DIFFICULTY PUSH2 0x7461 SLOAD PUSH16 0x6B656E54656D706C6174653A20696E76 PUSH2 0x6C69 PUSH5 0x206D696E74 PUSH6 0x724552433230 GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636544617461546F6B656E54656D PUSH17 0x6C6174653A204D696E7465722061646472 PUSH6 0x737320776173 KECCAK256 ADDRESS GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636544617461546F6B656E54 PUSH6 0x6D706C617465 GASPRICE KECCAK256 PUSH2 0x6C72 PUSH6 0x61647920696E PUSH10 0x7469616C697A65644552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332305061757361626C653A2074 PUSH9 0x697320746F6B656E20 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x73206E6F742070617573 PUSH6 0x644552433230 GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 DIFFICULTY PUSH2 0x7461 SLOAD PUSH16 0x6B656E54656D706C6174653A20666565 COINBASE PUSH5 0x6472657373 KECCAK256 PUSH24 0x6173203045524332303A2064656372656173656420616C6C PUSH16 0x77616E63652062656C6F77207A65726F LOG2 PUSH6 0x627A7A723158 KECCAK256 MLOAD 0xDC 0xCE PUSH5 0x305500BC94 0xC5 0xC5 0xE7 0xF6 0xE0 0xBF PUSH24 0x2D127261B0EA1BF7D040E993D6CA442C64736F6C63430005 GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x135"
    },
    "12": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8456CB59"
    },
    "25": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xAA271E1A"
    },
    "36": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "GT",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xAA271E1A"
    },
    "47": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E6"
    },
    "51": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB187BD26"
    },
    "58": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x619"
    },
    "62": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD3AD1CBF"
    },
    "69": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "73": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "80": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65E"
    },
    "84": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFCA3B5AA"
    },
    "91": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x699"
    },
    "95": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "96": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFDE0E7A8"
    },
    "102": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6CC"
    },
    "106": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "107": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x135"
    },
    "110": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "111": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8456CB59"
    },
    "118": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x369"
    },
    "122": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9070D2F8"
    },
    "129": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37E"
    },
    "133": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "140": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x55F"
    },
    "144": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "145": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "146": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA457C2D7"
    },
    "151": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x574"
    },
    "155": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "156": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "162": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5AD"
    },
    "166": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "167": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x135"
    },
    "170": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "171": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x355274EA"
    },
    "178": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "GT",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "183": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "184": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x355274EA"
    },
    "189": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "190": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x290"
    },
    "193": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "195": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x392E53CD"
    },
    "200": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A5"
    },
    "204": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "205": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "206": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x39509351"
    },
    "211": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "212": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BA"
    },
    "215": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "216": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "217": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3F4BA83A"
    },
    "222": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F3"
    },
    "226": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "227": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "228": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x40C10F19"
    },
    "233": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "234": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30A"
    },
    "237": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "238": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "239": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "244": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x336"
    },
    "248": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "249": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x135"
    },
    "252": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "253": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "254": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "255": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "260": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "261": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A"
    },
    "264": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "265": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "266": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "271": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "272": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C4"
    },
    "275": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "276": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "277": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "282": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "283": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x211"
    },
    "286": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "287": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "288": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "293": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "294": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x238"
    },
    "297": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "298": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "299": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "304": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "EQ",
      "path": "3"
    },
    "305": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27B"
    },
    "308": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "309": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "310": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "312": {
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "313": {
      "first_revert": true,
      "fn": null,
      "offset": [
        462,
        7609
      ],
      "op": "REVERT",
      "path": "3"
    },
    "314": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "315": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "316": {
      "op": "DUP1"
    },
    "317": {
      "op": "ISZERO"
    },
    "318": {
      "op": "PUSH2",
      "value": "0x146"
    },
    "321": {
      "op": "JUMPI"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "324": {
      "op": "DUP1"
    },
    "325": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "REVERT",
      "path": "3"
    },
    "326": {
      "op": "JUMPDEST"
    },
    "327": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "328": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "331": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E1"
    },
    "334": {
      "fn": "DataTokenTemplate.name",
      "jump": "i",
      "offset": [
        5836,
        5916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "335": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "336": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "338": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP1",
      "path": "3"
    },
    "339": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "340": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "342": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP1",
      "path": "3"
    },
    "343": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP3",
      "path": "3"
    },
    "344": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "345": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "346": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "347": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP2",
      "path": "3"
    },
    "348": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "349": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "ADD",
      "path": "3"
    },
    "350": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "351": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "352": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "353": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "354": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "355": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "356": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "357": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "358": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "359": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "ADD",
      "path": "3"
    },
    "360": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "361": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP6",
      "path": "3"
    },
    "362": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "ADD",
      "path": "3"
    },
    "363": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "364": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP1",
      "path": "3"
    },
    "365": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "366": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "367": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "369": {
      "op": "JUMPDEST"
    },
    "370": {
      "op": "DUP4"
    },
    "371": {
      "op": "DUP2"
    },
    "372": {
      "op": "LT"
    },
    "373": {
      "op": "ISZERO"
    },
    "374": {
      "op": "PUSH2",
      "value": "0x189"
    },
    "377": {
      "op": "JUMPI"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "DUP2"
    },
    "380": {
      "op": "ADD"
    },
    "381": {
      "op": "MLOAD"
    },
    "382": {
      "op": "DUP4"
    },
    "383": {
      "op": "DUP3"
    },
    "384": {
      "op": "ADD"
    },
    "385": {
      "op": "MSTORE"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "388": {
      "op": "ADD"
    },
    "389": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "392": {
      "op": "JUMP"
    },
    "393": {
      "op": "JUMPDEST"
    },
    "394": {
      "op": "POP"
    },
    "395": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "396": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "397": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "398": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "399": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "400": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "401": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP2",
      "path": "3"
    },
    "402": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "ADD",
      "path": "3"
    },
    "403": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "404": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "406": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "AND",
      "path": "3"
    },
    "407": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP1",
      "path": "3"
    },
    "408": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "409": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B6"
    },
    "412": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "413": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP1",
      "path": "3"
    },
    "414": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP3",
      "path": "3"
    },
    "415": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SUB",
      "path": "3"
    },
    "416": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP1",
      "path": "3"
    },
    "417": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "418": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "420": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "421": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "423": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SUB",
      "path": "3"
    },
    "424": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "427": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "EXP",
      "path": "3"
    },
    "428": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SUB",
      "path": "3"
    },
    "429": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "NOT",
      "path": "3"
    },
    "430": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "AND",
      "path": "3"
    },
    "431": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP2",
      "path": "3"
    },
    "432": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "433": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "435": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "ADD",
      "path": "3"
    },
    "436": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "437": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "438": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "439": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "440": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "441": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "442": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "443": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "POP",
      "path": "3"
    },
    "444": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "446": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "447": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "DUP1",
      "path": "3"
    },
    "448": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "449": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SUB",
      "path": "3"
    },
    "450": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "451": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "RETURN",
      "path": "3"
    },
    "452": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "453": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "454": {
      "op": "DUP1"
    },
    "455": {
      "op": "ISZERO"
    },
    "456": {
      "op": "PUSH2",
      "value": "0x1D0"
    },
    "459": {
      "op": "JUMPI"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "462": {
      "op": "DUP1"
    },
    "463": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "REVERT",
      "path": "6"
    },
    "464": {
      "op": "JUMPDEST"
    },
    "465": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "POP",
      "path": "6"
    },
    "466": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FD"
    },
    "469": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "471": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "DUP1",
      "path": "6"
    },
    "472": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "473": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "SUB",
      "path": "6"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "476": {
      "op": "DUP2"
    },
    "477": {
      "op": "LT"
    },
    "478": {
      "op": "ISZERO"
    },
    "479": {
      "op": "PUSH2",
      "value": "0x1E7"
    },
    "482": {
      "op": "JUMPI"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "485": {
      "op": "DUP1"
    },
    "486": {
      "op": "REVERT"
    },
    "487": {
      "op": "JUMPDEST"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "op": "SUB"
    },
    "497": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "DUP2",
      "path": "6"
    },
    "498": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "499": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "AND",
      "path": "6"
    },
    "500": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "501": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "503": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "ADD",
      "path": "6"
    },
    "504": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "505": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x778"
    },
    "508": {
      "fn": "ERC20Pausable.approve",
      "jump": "i",
      "offset": [
        2381,
        2574
      ],
      "op": "JUMP",
      "path": "6"
    },
    "509": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "510": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "512": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "DUP1",
      "path": "6"
    },
    "513": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "514": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "515": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "516": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "517": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "DUP3",
      "path": "6"
    },
    "518": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "519": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "520": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "521": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "DUP2",
      "path": "6"
    },
    "522": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "523": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "SUB",
      "path": "6"
    },
    "524": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "526": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "ADD",
      "path": "6"
    },
    "527": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "528": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "RETURN",
      "path": "6"
    },
    "529": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "530": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "531": {
      "op": "DUP1"
    },
    "532": {
      "op": "ISZERO"
    },
    "533": {
      "op": "PUSH2",
      "value": "0x21D"
    },
    "536": {
      "op": "JUMPI"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "539": {
      "op": "DUP1"
    },
    "540": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "REVERT",
      "path": "5"
    },
    "541": {
      "op": "JUMPDEST"
    },
    "542": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "POP",
      "path": "5"
    },
    "543": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x226"
    },
    "546": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D0"
    },
    "549": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        1542,
        1631
      ],
      "op": "JUMP",
      "path": "5"
    },
    "550": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "551": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "553": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "DUP1",
      "path": "5"
    },
    "554": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "555": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "556": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "DUP3",
      "path": "5"
    },
    "557": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "558": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "559": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "560": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "DUP2",
      "path": "5"
    },
    "561": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "562": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "SUB",
      "path": "5"
    },
    "563": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "565": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "ADD",
      "path": "5"
    },
    "566": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "567": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "RETURN",
      "path": "5"
    },
    "568": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "569": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "570": {
      "op": "DUP1"
    },
    "571": {
      "op": "ISZERO"
    },
    "572": {
      "op": "PUSH2",
      "value": "0x244"
    },
    "575": {
      "op": "JUMPI"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "578": {
      "op": "DUP1"
    },
    "579": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "REVERT",
      "path": "6"
    },
    "580": {
      "op": "JUMPDEST"
    },
    "581": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "POP",
      "path": "6"
    },
    "582": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FD"
    },
    "585": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "587": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "DUP1",
      "path": "6"
    },
    "588": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "589": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "SUB",
      "path": "6"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "592": {
      "op": "DUP2"
    },
    "593": {
      "op": "LT"
    },
    "594": {
      "op": "ISZERO"
    },
    "595": {
      "op": "PUSH2",
      "value": "0x25B"
    },
    "598": {
      "op": "JUMPI"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "601": {
      "op": "DUP1"
    },
    "602": {
      "op": "REVERT"
    },
    "603": {
      "op": "JUMPDEST"
    },
    "604": {
      "op": "POP"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "611": {
      "op": "SHL"
    },
    "612": {
      "op": "SUB"
    },
    "613": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "DUP2",
      "path": "6"
    },
    "614": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "615": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "DUP2",
      "path": "6"
    },
    "616": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "AND",
      "path": "6"
    },
    "617": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "618": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "620": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "DUP2",
      "path": "6"
    },
    "621": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "ADD",
      "path": "6"
    },
    "622": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "623": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "624": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "625": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "AND",
      "path": "6"
    },
    "626": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "627": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "629": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "ADD",
      "path": "6"
    },
    "630": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "631": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7D6"
    },
    "634": {
      "fn": "ERC20Pausable.transferFrom",
      "jump": "i",
      "offset": [
        1777,
        1999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "635": {
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6473,
        6555
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "636": {
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6473,
        6555
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "637": {
      "op": "DUP1"
    },
    "638": {
      "op": "ISZERO"
    },
    "639": {
      "op": "PUSH2",
      "value": "0x287"
    },
    "642": {
      "op": "JUMPI"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "645": {
      "op": "DUP1"
    },
    "646": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6473,
        6555
      ],
      "op": "REVERT",
      "path": "3"
    },
    "647": {
      "op": "JUMPDEST"
    },
    "648": {
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6473,
        6555
      ],
      "op": "POP",
      "path": "3"
    },
    "649": {
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6473,
        6555
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x226"
    },
    "652": {
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6473,
        6555
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x82E"
    },
    "655": {
      "fn": "DataTokenTemplate.decimals",
      "jump": "i",
      "offset": [
        6473,
        6555
      ],
      "op": "JUMP",
      "path": "3"
    },
    "656": {
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6677,
        6750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "657": {
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6677,
        6750
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "658": {
      "op": "DUP1"
    },
    "659": {
      "op": "ISZERO"
    },
    "660": {
      "op": "PUSH2",
      "value": "0x29C"
    },
    "663": {
      "op": "JUMPI"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "666": {
      "op": "DUP1"
    },
    "667": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6677,
        6750
      ],
      "op": "REVERT",
      "path": "3"
    },
    "668": {
      "op": "JUMPDEST"
    },
    "669": {
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6677,
        6750
      ],
      "op": "POP",
      "path": "3"
    },
    "670": {
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6677,
        6750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x226"
    },
    "673": {
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6677,
        6750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x834"
    },
    "676": {
      "fn": "DataTokenTemplate.cap",
      "jump": "i",
      "offset": [
        6677,
        6750
      ],
      "op": "JUMP",
      "path": "3"
    },
    "677": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7279,
        7365
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "678": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7279,
        7365
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "679": {
      "op": "DUP1"
    },
    "680": {
      "op": "ISZERO"
    },
    "681": {
      "op": "PUSH2",
      "value": "0x2B1"
    },
    "684": {
      "op": "JUMPI"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "687": {
      "op": "DUP1"
    },
    "688": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7279,
        7365
      ],
      "op": "REVERT",
      "path": "3"
    },
    "689": {
      "op": "JUMPDEST"
    },
    "690": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7279,
        7365
      ],
      "op": "POP",
      "path": "3"
    },
    "691": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7279,
        7365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "694": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7279,
        7365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x83A"
    },
    "697": {
      "fn": "DataTokenTemplate.isInitialized",
      "jump": "i",
      "offset": [
        7279,
        7365
      ],
      "op": "JUMP",
      "path": "3"
    },
    "698": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "699": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "700": {
      "op": "DUP1"
    },
    "701": {
      "op": "ISZERO"
    },
    "702": {
      "op": "PUSH2",
      "value": "0x2C6"
    },
    "705": {
      "op": "JUMPI"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "708": {
      "op": "DUP1"
    },
    "709": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "REVERT",
      "path": "6"
    },
    "710": {
      "op": "JUMPDEST"
    },
    "711": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "POP",
      "path": "6"
    },
    "712": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FD"
    },
    "715": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "717": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "DUP1",
      "path": "6"
    },
    "718": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "719": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "SUB",
      "path": "6"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "722": {
      "op": "DUP2"
    },
    "723": {
      "op": "LT"
    },
    "724": {
      "op": "ISZERO"
    },
    "725": {
      "op": "PUSH2",
      "value": "0x2DD"
    },
    "728": {
      "op": "JUMPI"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "731": {
      "op": "DUP1"
    },
    "732": {
      "op": "REVERT"
    },
    "733": {
      "op": "JUMPDEST"
    },
    "734": {
      "op": "POP"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "741": {
      "op": "SHL"
    },
    "742": {
      "op": "SUB"
    },
    "743": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "DUP2",
      "path": "6"
    },
    "744": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "745": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "AND",
      "path": "6"
    },
    "746": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "747": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "749": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "ADD",
      "path": "6"
    },
    "750": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "751": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x848"
    },
    "754": {
      "fn": "ERC20Pausable.increaseAllowance",
      "jump": "i",
      "offset": [
        3006,
        3229
      ],
      "op": "JUMP",
      "path": "6"
    },
    "755": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5265,
        5344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "756": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5265,
        5344
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "757": {
      "op": "DUP1"
    },
    "758": {
      "op": "ISZERO"
    },
    "759": {
      "op": "PUSH2",
      "value": "0x2FF"
    },
    "762": {
      "op": "JUMPI"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "765": {
      "op": "DUP1"
    },
    "766": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5265,
        5344
      ],
      "op": "REVERT",
      "path": "3"
    },
    "767": {
      "op": "JUMPDEST"
    },
    "768": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5265,
        5344
      ],
      "op": "POP",
      "path": "3"
    },
    "769": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5265,
        5344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x308"
    },
    "772": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5265,
        5344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x897"
    },
    "775": {
      "fn": "DataTokenTemplate.unpause",
      "jump": "i",
      "offset": [
        5265,
        5344
      ],
      "op": "JUMP",
      "path": "3"
    },
    "776": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5265,
        5344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "777": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5265,
        5344
      ],
      "op": "STOP",
      "path": "3"
    },
    "778": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "779": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x308"
    },
    "782": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "784": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "DUP1",
      "path": "3"
    },
    "785": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "786": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "SUB",
      "path": "3"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "789": {
      "op": "DUP2"
    },
    "790": {
      "op": "LT"
    },
    "791": {
      "op": "ISZERO"
    },
    "792": {
      "op": "PUSH2",
      "value": "0x320"
    },
    "795": {
      "op": "JUMPI"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "798": {
      "op": "DUP1"
    },
    "799": {
      "op": "REVERT"
    },
    "800": {
      "op": "JUMPDEST"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "808": {
      "op": "SHL"
    },
    "809": {
      "op": "SUB"
    },
    "810": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "DUP2",
      "path": "3"
    },
    "811": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "812": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "AND",
      "path": "3"
    },
    "813": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "814": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "816": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "ADD",
      "path": "3"
    },
    "817": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "818": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x92D"
    },
    "821": {
      "fn": "DataTokenTemplate.mint",
      "jump": "i",
      "offset": [
        3889,
        4445
      ],
      "op": "JUMP",
      "path": "3"
    },
    "822": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "823": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "824": {
      "op": "DUP1"
    },
    "825": {
      "op": "ISZERO"
    },
    "826": {
      "op": "PUSH2",
      "value": "0x342"
    },
    "829": {
      "op": "JUMPI"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "832": {
      "op": "DUP1"
    },
    "833": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "REVERT",
      "path": "5"
    },
    "834": {
      "op": "JUMPDEST"
    },
    "835": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "POP",
      "path": "5"
    },
    "836": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x226"
    },
    "839": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "841": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "DUP1",
      "path": "5"
    },
    "842": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "843": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "SUB",
      "path": "5"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "846": {
      "op": "DUP2"
    },
    "847": {
      "op": "LT"
    },
    "848": {
      "op": "ISZERO"
    },
    "849": {
      "op": "PUSH2",
      "value": "0x359"
    },
    "852": {
      "op": "JUMPI"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "855": {
      "op": "DUP1"
    },
    "856": {
      "op": "REVERT"
    },
    "857": {
      "op": "JUMPDEST"
    },
    "858": {
      "op": "POP"
    },
    "859": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "866": {
      "op": "SHL"
    },
    "867": {
      "op": "SUB"
    },
    "868": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "AND",
      "path": "5"
    },
    "869": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD6"
    },
    "872": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1689,
        1797
      ],
      "op": "JUMP",
      "path": "5"
    },
    "873": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        4983,
        5062
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "874": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        4983,
        5062
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "875": {
      "op": "DUP1"
    },
    "876": {
      "op": "ISZERO"
    },
    "877": {
      "op": "PUSH2",
      "value": "0x375"
    },
    "880": {
      "op": "JUMPI"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "883": {
      "op": "DUP1"
    },
    "884": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.pause",
      "offset": [
        4983,
        5062
      ],
      "op": "REVERT",
      "path": "3"
    },
    "885": {
      "op": "JUMPDEST"
    },
    "886": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        4983,
        5062
      ],
      "op": "POP",
      "path": "3"
    },
    "887": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        4983,
        5062
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x308"
    },
    "890": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        4983,
        5062
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF1"
    },
    "893": {
      "fn": "DataTokenTemplate.pause",
      "jump": "i",
      "offset": [
        4983,
        5062
      ],
      "op": "JUMP",
      "path": "3"
    },
    "894": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "895": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "896": {
      "op": "DUP1"
    },
    "897": {
      "op": "ISZERO"
    },
    "898": {
      "op": "PUSH2",
      "value": "0x38A"
    },
    "901": {
      "op": "JUMPI"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "904": {
      "op": "DUP1"
    },
    "905": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "REVERT",
      "path": "3"
    },
    "906": {
      "op": "JUMPDEST"
    },
    "907": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "POP",
      "path": "3"
    },
    "908": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "911": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "913": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "914": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "915": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SUB",
      "path": "3"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "918": {
      "op": "DUP2"
    },
    "919": {
      "op": "LT"
    },
    "920": {
      "op": "ISZERO"
    },
    "921": {
      "op": "PUSH2",
      "value": "0x3A1"
    },
    "924": {
      "op": "JUMPI"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "927": {
      "op": "DUP1"
    },
    "928": {
      "op": "REVERT"
    },
    "929": {
      "op": "JUMPDEST"
    },
    "930": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "931": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "932": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "933": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "935": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "936": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "937": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "938": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "939": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "945": {
      "op": "DUP2"
    },
    "946": {
      "op": "GT"
    },
    "947": {
      "op": "ISZERO"
    },
    "948": {
      "op": "PUSH2",
      "value": "0x3BC"
    },
    "951": {
      "op": "JUMPI"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "954": {
      "op": "DUP1"
    },
    "955": {
      "op": "REVERT"
    },
    "956": {
      "op": "JUMPDEST"
    },
    "957": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP3",
      "path": "3"
    },
    "958": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "959": {
      "op": "DUP4"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "962": {
      "op": "DUP3"
    },
    "963": {
      "op": "ADD"
    },
    "964": {
      "op": "GT"
    },
    "965": {
      "op": "ISZERO"
    },
    "966": {
      "op": "PUSH2",
      "value": "0x3CE"
    },
    "969": {
      "op": "JUMPI"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "972": {
      "op": "DUP1"
    },
    "973": {
      "op": "REVERT"
    },
    "974": {
      "op": "JUMPDEST"
    },
    "975": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "976": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "977": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "978": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "980": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "981": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "982": {
      "op": "DUP5"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "DUP4"
    },
    "986": {
      "op": "MUL"
    },
    "987": {
      "op": "DUP5"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "GT"
    },
    "990": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "996": {
      "op": "DUP4"
    },
    "997": {
      "op": "GT"
    },
    "998": {
      "op": "OR"
    },
    "999": {
      "op": "ISZERO"
    },
    "1000": {
      "op": "PUSH2",
      "value": "0x3F0"
    },
    "1003": {
      "op": "JUMPI"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1006": {
      "op": "DUP1"
    },
    "1007": {
      "op": "REVERT"
    },
    "1008": {
      "op": "JUMPDEST"
    },
    "1009": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1010": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1011": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1012": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1013": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1015": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1016": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1018": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1019": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1020": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DIV",
      "path": "3"
    },
    "1021": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MUL",
      "path": "3"
    },
    "1022": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1024": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1025": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1027": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1028": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1029": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1030": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1031": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1033": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1034": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1035": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1036": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1037": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1038": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1039": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1040": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1041": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1042": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1044": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1045": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1046": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1047": {
      "op": "DUP1"
    },
    "1048": {
      "op": "DUP3"
    },
    "1049": {
      "op": "DUP5"
    },
    "1050": {
      "op": "CALLDATACOPY"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1053": {
      "op": "SWAP3"
    },
    "1054": {
      "op": "ADD"
    },
    "1055": {
      "op": "SWAP2"
    },
    "1056": {
      "op": "SWAP1"
    },
    "1057": {
      "op": "SWAP2"
    },
    "1058": {
      "op": "MSTORE"
    },
    "1059": {
      "op": "POP"
    },
    "1060": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1061": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1062": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1063": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1064": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1066": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1067": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1068": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1069": {
      "op": "POP"
    },
    "1070": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1071": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "1080": {
      "op": "DUP2"
    },
    "1081": {
      "op": "GT"
    },
    "1082": {
      "op": "ISZERO"
    },
    "1083": {
      "op": "PUSH2",
      "value": "0x443"
    },
    "1086": {
      "op": "JUMPI"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1089": {
      "op": "DUP1"
    },
    "1090": {
      "op": "REVERT"
    },
    "1091": {
      "op": "JUMPDEST"
    },
    "1092": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1093": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1094": {
      "op": "DUP4"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1097": {
      "op": "DUP3"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "op": "GT"
    },
    "1100": {
      "op": "ISZERO"
    },
    "1101": {
      "op": "PUSH2",
      "value": "0x455"
    },
    "1104": {
      "op": "JUMPI"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1107": {
      "op": "DUP1"
    },
    "1108": {
      "op": "REVERT"
    },
    "1109": {
      "op": "JUMPDEST"
    },
    "1110": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1111": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1112": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1113": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1115": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1116": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1117": {
      "op": "DUP5"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "DUP4"
    },
    "1121": {
      "op": "MUL"
    },
    "1122": {
      "op": "DUP5"
    },
    "1123": {
      "op": "ADD"
    },
    "1124": {
      "op": "GT"
    },
    "1125": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "1131": {
      "op": "DUP4"
    },
    "1132": {
      "op": "GT"
    },
    "1133": {
      "op": "OR"
    },
    "1134": {
      "op": "ISZERO"
    },
    "1135": {
      "op": "PUSH2",
      "value": "0x477"
    },
    "1138": {
      "op": "JUMPI"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1141": {
      "op": "DUP1"
    },
    "1142": {
      "op": "REVERT"
    },
    "1143": {
      "op": "JUMPDEST"
    },
    "1144": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1145": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1146": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1147": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1148": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1150": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1151": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1153": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1154": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1155": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DIV",
      "path": "3"
    },
    "1156": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MUL",
      "path": "3"
    },
    "1157": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1159": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1160": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1162": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1163": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1164": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1165": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1166": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1168": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1169": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1170": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1171": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1172": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1173": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1174": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1175": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1176": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1177": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1179": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1180": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1181": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1182": {
      "op": "DUP1"
    },
    "1183": {
      "op": "DUP3"
    },
    "1184": {
      "op": "DUP5"
    },
    "1185": {
      "op": "CALLDATACOPY"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1188": {
      "op": "SWAP3"
    },
    "1189": {
      "op": "ADD"
    },
    "1190": {
      "op": "SWAP2"
    },
    "1191": {
      "op": "SWAP1"
    },
    "1192": {
      "op": "SWAP2"
    },
    "1193": {
      "op": "MSTORE"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1196": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1203": {
      "op": "SHL"
    },
    "1204": {
      "op": "SUB"
    },
    "1205": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1206": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1207": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "AND",
      "path": "3"
    },
    "1208": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1209": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1211": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1212": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1213": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1214": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1215": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1216": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1217": {
      "op": "POP"
    },
    "1218": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1222": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1223": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1224": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1225": {
      "op": "POP"
    },
    "1226": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1228": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1229": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1230": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "1236": {
      "op": "DUP2"
    },
    "1237": {
      "op": "GT"
    },
    "1238": {
      "op": "ISZERO"
    },
    "1239": {
      "op": "PUSH2",
      "value": "0x4DF"
    },
    "1242": {
      "op": "JUMPI"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1245": {
      "op": "DUP1"
    },
    "1246": {
      "op": "REVERT"
    },
    "1247": {
      "op": "JUMPDEST"
    },
    "1248": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1249": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1250": {
      "op": "DUP4"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1253": {
      "op": "DUP3"
    },
    "1254": {
      "op": "ADD"
    },
    "1255": {
      "op": "GT"
    },
    "1256": {
      "op": "ISZERO"
    },
    "1257": {
      "op": "PUSH2",
      "value": "0x4F1"
    },
    "1260": {
      "op": "JUMPI"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1263": {
      "op": "DUP1"
    },
    "1264": {
      "op": "REVERT"
    },
    "1265": {
      "op": "JUMPDEST"
    },
    "1266": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1267": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1268": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1269": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1271": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1272": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1273": {
      "op": "DUP5"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "DUP4"
    },
    "1277": {
      "op": "MUL"
    },
    "1278": {
      "op": "DUP5"
    },
    "1279": {
      "op": "ADD"
    },
    "1280": {
      "op": "GT"
    },
    "1281": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "1287": {
      "op": "DUP4"
    },
    "1288": {
      "op": "GT"
    },
    "1289": {
      "op": "OR"
    },
    "1290": {
      "op": "ISZERO"
    },
    "1291": {
      "op": "PUSH2",
      "value": "0x513"
    },
    "1294": {
      "op": "JUMPI"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1297": {
      "op": "DUP1"
    },
    "1298": {
      "op": "REVERT"
    },
    "1299": {
      "op": "JUMPDEST"
    },
    "1300": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1301": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1302": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1303": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1304": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1306": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1307": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1309": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1310": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1311": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DIV",
      "path": "3"
    },
    "1312": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MUL",
      "path": "3"
    },
    "1313": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1315": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1316": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1318": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1319": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1320": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1321": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1322": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1324": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1325": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1326": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1327": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1328": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1329": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1330": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1331": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1332": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1333": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1335": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1336": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1337": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1338": {
      "op": "DUP1"
    },
    "1339": {
      "op": "DUP3"
    },
    "1340": {
      "op": "DUP5"
    },
    "1341": {
      "op": "CALLDATACOPY"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1344": {
      "op": "SWAP3"
    },
    "1345": {
      "op": "ADD"
    },
    "1346": {
      "op": "SWAP2"
    },
    "1347": {
      "op": "SWAP1"
    },
    "1348": {
      "op": "SWAP2"
    },
    "1349": {
      "op": "MSTORE"
    },
    "1350": {
      "op": "POP"
    },
    "1351": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1352": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1353": {
      "op": "POP"
    },
    "1354": {
      "op": "POP"
    },
    "1355": {
      "op": "POP"
    },
    "1356": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1357": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "AND",
      "path": "3"
    },
    "1367": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB8B"
    },
    "1372": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "fn": "DataTokenTemplate.initialize",
      "jump": "i",
      "offset": [
        2062,
        2395
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1375": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6047,
        6131
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1376": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6047,
        6131
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1377": {
      "op": "DUP1"
    },
    "1378": {
      "op": "ISZERO"
    },
    "1379": {
      "op": "PUSH2",
      "value": "0x56B"
    },
    "1382": {
      "op": "JUMPI"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1385": {
      "op": "DUP1"
    },
    "1386": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6047,
        6131
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1387": {
      "op": "JUMPDEST"
    },
    "1388": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6047,
        6131
      ],
      "op": "POP",
      "path": "3"
    },
    "1389": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6047,
        6131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "1392": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6047,
        6131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBEE"
    },
    "1395": {
      "fn": "DataTokenTemplate.symbol",
      "jump": "i",
      "offset": [
        6047,
        6131
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1396": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1397": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1398": {
      "op": "DUP1"
    },
    "1399": {
      "op": "ISZERO"
    },
    "1400": {
      "op": "PUSH2",
      "value": "0x580"
    },
    "1403": {
      "op": "JUMPI"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1406": {
      "op": "DUP1"
    },
    "1407": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1408": {
      "op": "JUMPDEST"
    },
    "1409": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "POP",
      "path": "6"
    },
    "1410": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FD"
    },
    "1413": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1415": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1416": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1417": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "SUB",
      "path": "6"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1420": {
      "op": "DUP2"
    },
    "1421": {
      "op": "LT"
    },
    "1422": {
      "op": "ISZERO"
    },
    "1423": {
      "op": "PUSH2",
      "value": "0x597"
    },
    "1426": {
      "op": "JUMPI"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1429": {
      "op": "DUP1"
    },
    "1430": {
      "op": "REVERT"
    },
    "1431": {
      "op": "JUMPDEST"
    },
    "1432": {
      "op": "POP"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1439": {
      "op": "SHL"
    },
    "1440": {
      "op": "SUB"
    },
    "1441": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1442": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "1443": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "AND",
      "path": "6"
    },
    "1444": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1445": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1447": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "ADD",
      "path": "6"
    },
    "1448": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "1449": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC4F"
    },
    "1452": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "jump": "i",
      "offset": [
        3671,
        3904
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1453": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1454": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1455": {
      "op": "DUP1"
    },
    "1456": {
      "op": "ISZERO"
    },
    "1457": {
      "op": "PUSH2",
      "value": "0x5B9"
    },
    "1460": {
      "op": "JUMPI"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1463": {
      "op": "DUP1"
    },
    "1464": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1465": {
      "op": "JUMPDEST"
    },
    "1466": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "POP",
      "path": "6"
    },
    "1467": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FD"
    },
    "1470": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1472": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1473": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1474": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "SUB",
      "path": "6"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1477": {
      "op": "DUP2"
    },
    "1478": {
      "op": "LT"
    },
    "1479": {
      "op": "ISZERO"
    },
    "1480": {
      "op": "PUSH2",
      "value": "0x5D0"
    },
    "1483": {
      "op": "JUMPI"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1486": {
      "op": "DUP1"
    },
    "1487": {
      "op": "REVERT"
    },
    "1488": {
      "op": "JUMPDEST"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1496": {
      "op": "SHL"
    },
    "1497": {
      "op": "SUB"
    },
    "1498": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1499": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "1500": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "AND",
      "path": "6"
    },
    "1501": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1502": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1504": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "ADD",
      "path": "6"
    },
    "1505": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "1506": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC9E"
    },
    "1509": {
      "fn": "ERC20Pausable.transfer",
      "jump": "i",
      "offset": [
        1144,
        1329
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1510": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1511": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1512": {
      "op": "DUP1"
    },
    "1513": {
      "op": "ISZERO"
    },
    "1514": {
      "op": "PUSH2",
      "value": "0x5F2"
    },
    "1517": {
      "op": "JUMPI"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1520": {
      "op": "DUP1"
    },
    "1521": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1522": {
      "op": "JUMPDEST"
    },
    "1523": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "POP",
      "path": "3"
    },
    "1524": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1527": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1529": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1530": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1531": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "SUB",
      "path": "3"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1534": {
      "op": "DUP2"
    },
    "1535": {
      "op": "LT"
    },
    "1536": {
      "op": "ISZERO"
    },
    "1537": {
      "op": "PUSH2",
      "value": "0x609"
    },
    "1540": {
      "op": "JUMPI"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1543": {
      "op": "DUP1"
    },
    "1544": {
      "op": "REVERT"
    },
    "1545": {
      "op": "JUMPDEST"
    },
    "1546": {
      "op": "POP"
    },
    "1547": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "op": "SUB"
    },
    "1556": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "AND",
      "path": "3"
    },
    "1557": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCED"
    },
    "1560": {
      "fn": "DataTokenTemplate.isMinter",
      "jump": "i",
      "offset": [
        6992,
        7097
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1561": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7531,
        7607
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1562": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7531,
        7607
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1563": {
      "op": "DUP1"
    },
    "1564": {
      "op": "ISZERO"
    },
    "1565": {
      "op": "PUSH2",
      "value": "0x625"
    },
    "1568": {
      "op": "JUMPI"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1571": {
      "op": "DUP1"
    },
    "1572": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7531,
        7607
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1573": {
      "op": "JUMPDEST"
    },
    "1574": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7531,
        7607
      ],
      "op": "POP",
      "path": "3"
    },
    "1575": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7531,
        7607
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "1578": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7531,
        7607
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD01"
    },
    "1581": {
      "fn": "DataTokenTemplate.isPaused",
      "jump": "i",
      "offset": [
        7531,
        7607
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1582": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1583": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1584": {
      "op": "DUP1"
    },
    "1585": {
      "op": "ISZERO"
    },
    "1586": {
      "op": "PUSH2",
      "value": "0x63A"
    },
    "1589": {
      "op": "JUMPI"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1592": {
      "op": "DUP1"
    },
    "1593": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1594": {
      "op": "JUMPDEST"
    },
    "1595": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "POP",
      "path": "3"
    },
    "1596": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x226"
    },
    "1599": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1601": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1602": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1603": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "SUB",
      "path": "3"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1606": {
      "op": "DUP2"
    },
    "1607": {
      "op": "LT"
    },
    "1608": {
      "op": "ISZERO"
    },
    "1609": {
      "op": "PUSH2",
      "value": "0x651"
    },
    "1612": {
      "op": "JUMPI"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1615": {
      "op": "DUP1"
    },
    "1616": {
      "op": "REVERT"
    },
    "1617": {
      "op": "JUMPDEST"
    },
    "1618": {
      "op": "POP"
    },
    "1619": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1620": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1621": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1622": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1624": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "ADD",
      "path": "3"
    },
    "1625": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1626": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD0A"
    },
    "1629": {
      "fn": "DataTokenTemplate._calculateFee",
      "jump": "i",
      "offset": [
        4451,
        4763
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1630": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1631": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1632": {
      "op": "DUP1"
    },
    "1633": {
      "op": "ISZERO"
    },
    "1634": {
      "op": "PUSH2",
      "value": "0x66A"
    },
    "1637": {
      "op": "JUMPI"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1640": {
      "op": "DUP1"
    },
    "1641": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1642": {
      "op": "JUMPDEST"
    },
    "1643": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "POP",
      "path": "5"
    },
    "1644": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x226"
    },
    "1647": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1649": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1650": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1651": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "SUB",
      "path": "5"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1654": {
      "op": "DUP2"
    },
    "1655": {
      "op": "LT"
    },
    "1656": {
      "op": "ISZERO"
    },
    "1657": {
      "op": "PUSH2",
      "value": "0x681"
    },
    "1660": {
      "op": "JUMPI"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1663": {
      "op": "DUP1"
    },
    "1664": {
      "op": "REVERT"
    },
    "1665": {
      "op": "JUMPDEST"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "op": "SUB"
    },
    "1675": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1676": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1677": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1678": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "AND",
      "path": "5"
    },
    "1679": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1680": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1682": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "ADD",
      "path": "5"
    },
    "1683": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1684": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "AND",
      "path": "5"
    },
    "1685": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD4E"
    },
    "1688": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2213,
        2345
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1689": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1690": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1691": {
      "op": "DUP1"
    },
    "1692": {
      "op": "ISZERO"
    },
    "1693": {
      "op": "PUSH2",
      "value": "0x6A5"
    },
    "1696": {
      "op": "JUMPI"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1699": {
      "op": "DUP1"
    },
    "1700": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1701": {
      "op": "JUMPDEST"
    },
    "1702": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "POP",
      "path": "3"
    },
    "1703": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x308"
    },
    "1706": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1708": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1709": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1710": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "SUB",
      "path": "3"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1713": {
      "op": "DUP2"
    },
    "1714": {
      "op": "LT"
    },
    "1715": {
      "op": "ISZERO"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0x6BC"
    },
    "1719": {
      "op": "JUMPI"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1722": {
      "op": "DUP1"
    },
    "1723": {
      "op": "REVERT"
    },
    "1724": {
      "op": "JUMPDEST"
    },
    "1725": {
      "op": "POP"
    },
    "1726": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1733": {
      "op": "SHL"
    },
    "1734": {
      "op": "SUB"
    },
    "1735": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "AND",
      "path": "3"
    },
    "1736": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD79"
    },
    "1739": {
      "fn": "DataTokenTemplate.setMinter",
      "jump": "i",
      "offset": [
        5611,
        5711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1740": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6256,
        6336
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1741": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6256,
        6336
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1742": {
      "op": "DUP1"
    },
    "1743": {
      "op": "ISZERO"
    },
    "1744": {
      "op": "PUSH2",
      "value": "0x6D8"
    },
    "1747": {
      "op": "JUMPI"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1750": {
      "op": "DUP1"
    },
    "1751": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6256,
        6336
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1752": {
      "op": "JUMPDEST"
    },
    "1753": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6256,
        6336
      ],
      "op": "POP",
      "path": "3"
    },
    "1754": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6256,
        6336
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "1757": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6256,
        6336
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE26"
    },
    "1760": {
      "fn": "DataTokenTemplate.blob",
      "jump": "i",
      "offset": [
        6256,
        6336
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1761": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1762": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5904,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x4"
    },
    "1764": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1765": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1766": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1768": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1769": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1770": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1772": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1774": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1778": {
      "op": "NOT"
    },
    "1779": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1782": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1784": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1785": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "AND",
      "path": "3"
    },
    "1786": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1787": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "MUL",
      "path": "3"
    },
    "1788": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1789": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1790": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1791": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "AND",
      "path": "3"
    },
    "1792": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1793": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1794": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1795": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DIV",
      "path": "3"
    },
    "1796": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1797": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1798": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1799": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1800": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1801": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DIV",
      "path": "3"
    },
    "1802": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1803": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "MUL",
      "path": "3"
    },
    "1804": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1805": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1806": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1807": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1808": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1809": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1810": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1811": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1812": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1813": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1814": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5872,
        5885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1816": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5872,
        5885
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1817": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1818": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1819": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5904,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1820": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5904,
        5909
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1821": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1822": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1823": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5904,
        5909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1824": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1825": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1826": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1827": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76D"
    },
    "1830": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1831": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1832": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1834": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "LT",
      "path": "3"
    },
    "1835": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x742"
    },
    "1838": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1839": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1842": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1843": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1844": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1845": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DIV",
      "path": "3"
    },
    "1846": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "MUL",
      "path": "3"
    },
    "1847": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1848": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1849": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1850": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1852": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1853": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1854": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76D"
    },
    "1857": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1858": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1859": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1860": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1861": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1862": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1863": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1865": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1866": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1868": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1870": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1871": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1872": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1873": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1874": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1875": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1876": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1877": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1878": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1880": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1881": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1882": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1884": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1885": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1886": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1887": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "GT",
      "path": "3"
    },
    "1888": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x750"
    },
    "1891": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1892": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1893": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1894": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SUB",
      "path": "3"
    },
    "1895": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1897": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "AND",
      "path": "3"
    },
    "1898": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1899": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1900": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1901": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1902": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "POP",
      "path": "3"
    },
    "1903": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "POP",
      "path": "3"
    },
    "1904": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "POP",
      "path": "3"
    },
    "1905": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "POP",
      "path": "3"
    },
    "1906": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "POP",
      "path": "3"
    },
    "1907": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1908": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5897,
        5909
      ],
      "op": "POP",
      "path": "3"
    },
    "1909": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1910": {
      "fn": "DataTokenTemplate.name",
      "offset": [
        5836,
        5916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1911": {
      "fn": "DataTokenTemplate.name",
      "jump": "o",
      "offset": [
        5836,
        5916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1912": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1913": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1915": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        519,
        525
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1916": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2510,
        2514
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1918": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2510,
        2514
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1919": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1921": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        519,
        525
      ],
      "op": "AND",
      "path": "6"
    },
    "1922": {
      "offset": [
        518,
        525
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1923": {
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7BD"
    },
    "1926": {
      "offset": [
        497,
        596
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1927": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1929": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1936": {
      "op": "SHL"
    },
    "1937": {
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1938": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1939": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1941": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "1942": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1943": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1944": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1946": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "1947": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1948": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1949": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "1950": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1951": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1952": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "1954": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1955": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1956": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1958": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "1959": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1960": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1754"
    },
    "1963": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "1965": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1966": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1967": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1969": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "1970": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1971": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "1972": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "1973": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1975": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1976": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1977": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1978": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "1979": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1980": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1981": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        497,
        596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1982": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2538,
        2567
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 1,
      "value": "0x7C7"
    },
    "1985": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2552,
        2559
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1986": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2561,
        2566
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1987": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2538,
        2551
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE87"
    },
    "1990": {
      "fn": "ERC20Pausable.approve",
      "jump": "i",
      "offset": [
        2538,
        2567
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1991": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2538,
        2567
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1992": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2531,
        2567
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1993": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2531,
        2567
      ],
      "op": "POP",
      "path": "6"
    },
    "1994": {
      "offset": [
        606,
        607
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1995": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1996": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1997": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "POP",
      "path": "6"
    },
    "1998": {
      "fn": "ERC20Pausable.approve",
      "offset": [
        2381,
        2574
      ],
      "op": "POP",
      "path": "6"
    },
    "1999": {
      "fn": "ERC20Pausable.approve",
      "jump": "o",
      "offset": [
        2381,
        2574
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2000": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2001": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1612,
        1624
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x2"
    },
    "2003": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1612,
        1624
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2004": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1542,
        1631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2005": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        1542,
        1631
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2006": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2007": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2009": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        519,
        525
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2010": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1929,
        1933
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2012": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1929,
        1933
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2013": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2015": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        519,
        525
      ],
      "op": "AND",
      "path": "6"
    },
    "2016": {
      "offset": [
        518,
        525
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2017": {
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x81B"
    },
    "2020": {
      "offset": [
        497,
        596
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2021": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2023": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2024": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2030": {
      "op": "SHL"
    },
    "2031": {
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2032": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2033": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2035": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2036": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2037": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2038": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2040": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2041": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2042": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2043": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "2044": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2045": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2046": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "2048": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2049": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2050": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2052": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2053": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2054": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1754"
    },
    "2057": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "2059": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2060": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2061": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2063": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2064": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2065": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "2066": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "2067": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2069": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2070": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2071": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2072": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "2073": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2074": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2075": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        497,
        596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2076": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1957,
        1992
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 3,
      "value": "0x826"
    },
    "2079": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1976,
        1980
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2080": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1982,
        1984
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2081": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1986,
        1991
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2082": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1957,
        1975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEA4"
    },
    "2085": {
      "fn": "ERC20Pausable.transferFrom",
      "jump": "i",
      "offset": [
        1957,
        1992
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2086": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1957,
        1992
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2087": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1950,
        1992
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2088": {
      "fn": "ERC20Pausable.transferFrom",
      "offset": [
        1777,
        1999
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2089": {
      "op": "POP"
    },
    "2090": {
      "op": "POP"
    },
    "2091": {
      "op": "POP"
    },
    "2092": {
      "op": "POP"
    },
    "2093": {
      "fn": "ERC20Pausable.transferFrom",
      "jump": "o",
      "offset": [
        1777,
        1999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2094": {
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6473,
        6555
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2095": {
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6539,
        6548
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x8"
    },
    "2097": {
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6539,
        6548
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2098": {
      "fn": "DataTokenTemplate.decimals",
      "offset": [
        6473,
        6555
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2099": {
      "fn": "DataTokenTemplate.decimals",
      "jump": "o",
      "offset": [
        6473,
        6555
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2100": {
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6677,
        6750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2101": {
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6739,
        6743
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x7"
    },
    "2103": {
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6739,
        6743
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2104": {
      "fn": "DataTokenTemplate.cap",
      "offset": [
        6677,
        6750
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2105": {
      "fn": "DataTokenTemplate.cap",
      "jump": "o",
      "offset": [
        6677,
        6750
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2106": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7279,
        7365
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2107": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7347,
        7358
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x3"
    },
    "2109": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7347,
        7358
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2110": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7347,
        7358
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2113": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7347,
        7358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2114": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7347,
        7358
      ],
      "op": "DIV",
      "path": "3"
    },
    "2115": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7347,
        7358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2117": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7347,
        7358
      ],
      "op": "AND",
      "path": "3"
    },
    "2118": {
      "fn": "DataTokenTemplate.isInitialized",
      "offset": [
        7347,
        7358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2119": {
      "fn": "DataTokenTemplate.isInitialized",
      "jump": "o",
      "offset": [
        7279,
        7365
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2120": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3006,
        3229
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2121": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2123": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        519,
        525
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2124": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3150,
        3154
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2126": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3150,
        3154
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2127": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2129": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        519,
        525
      ],
      "op": "AND",
      "path": "6"
    },
    "2130": {
      "offset": [
        518,
        525
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2131": {
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x88D"
    },
    "2134": {
      "offset": [
        497,
        596
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2135": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2137": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2144": {
      "op": "SHL"
    },
    "2145": {
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2146": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2147": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2149": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2150": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2151": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2152": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2154": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2155": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2156": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2157": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "2158": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2159": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2160": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "2162": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2163": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2164": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2166": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2167": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2168": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1754"
    },
    "2171": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "2173": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2174": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2175": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2177": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2178": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2179": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "2180": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "2181": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2183": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2184": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2185": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2186": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "2187": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2188": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2189": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2190": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3178,
        3222
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 7,
      "value": "0x7C7"
    },
    "2193": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3202,
        3209
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2194": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3211,
        3221
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2195": {
      "fn": "ERC20Pausable.increaseAllowance",
      "offset": [
        3178,
        3201
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF31"
    },
    "2198": {
      "fn": "ERC20Pausable.increaseAllowance",
      "jump": "i",
      "offset": [
        3178,
        3222
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2199": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5265,
        5344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2200": {
      "offset": [
        673,
        679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2202": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        673,
        679
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2203": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        673,
        679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2205": {
      "branch": 79,
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        673,
        679
      ],
      "op": "AND",
      "path": "6"
    },
    "2206": {
      "offset": [
        652,
        754
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8D8"
    },
    "2209": {
      "branch": 79,
      "offset": [
        652,
        754
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2210": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2212": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "offset": [
        652,
        754
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2221": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2222": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2224": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "ADD",
      "path": "6"
    },
    "2225": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2226": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2227": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2229": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "ADD",
      "path": "6"
    },
    "2230": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2231": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2232": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "SUB",
      "path": "6"
    },
    "2233": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2234": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2235": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x30"
    },
    "2237": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2238": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2239": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2241": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "ADD",
      "path": "6"
    },
    "2242": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2243": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18B3"
    },
    "2246": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x30"
    },
    "2248": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2249": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2250": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2252": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "ADD",
      "path": "6"
    },
    "2253": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2254": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "POP",
      "path": "6"
    },
    "2255": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "POP",
      "path": "6"
    },
    "2256": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2258": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2259": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2260": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2261": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "SUB",
      "path": "6"
    },
    "2262": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2263": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2264": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        652,
        754
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2265": {
      "offset": [
        1004,
        1011
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "2267": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        1004,
        1011
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2274": {
      "op": "SHL"
    },
    "2275": {
      "op": "SUB"
    },
    "2276": {
      "offset": [
        1004,
        1011
      ],
      "op": "AND",
      "path": "3"
    },
    "2277": {
      "offset": [
        990,
        1000
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2278": {
      "offset": [
        990,
        1011
      ],
      "op": "EQ",
      "path": "3"
    },
    "2279": {
      "offset": [
        982,
        1049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x921"
    },
    "2282": {
      "offset": [
        982,
        1049
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2283": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2285": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2294": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2295": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2297": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2298": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2299": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2300": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2302": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2303": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2304": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2305": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "SUB",
      "path": "3"
    },
    "2306": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2307": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2308": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2310": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2311": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2312": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2314": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2315": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2316": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17D2"
    },
    "2319": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2321": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2322": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2323": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2325": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2326": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2327": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "POP",
      "path": "3"
    },
    "2328": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "POP",
      "path": "3"
    },
    "2329": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2331": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2332": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2333": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2334": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "SUB",
      "path": "3"
    },
    "2335": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2336": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2337": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        982,
        1049
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2338": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5323,
        5329
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x3"
    },
    "2340": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5323,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2341": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5323,
        5337
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2344": {
      "op": "NOT"
    },
    "2345": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5323,
        5337
      ],
      "op": "AND",
      "path": "3"
    },
    "2346": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5323,
        5337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2347": {
      "fn": "DataTokenTemplate.unpause",
      "offset": [
        5323,
        5337
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2348": {
      "fn": "DataTokenTemplate.unpause",
      "jump": "o",
      "offset": [
        5265,
        5344
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2349": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2350": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2352": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        519,
        525
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2353": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2355": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        519,
        525
      ],
      "op": "AND",
      "path": "6"
    },
    "2356": {
      "offset": [
        518,
        525
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2357": {
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x96F"
    },
    "2360": {
      "offset": [
        497,
        596
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2361": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2363": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2364": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2370": {
      "op": "SHL"
    },
    "2371": {
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2372": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2373": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2375": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2376": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2377": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2378": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2380": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2381": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2382": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2383": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "2384": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2385": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2386": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "2388": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2389": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2390": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2392": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2393": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2394": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1754"
    },
    "2397": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "2399": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2400": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2401": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2403": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2404": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2405": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "2406": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "2407": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2409": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2410": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2411": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2412": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "2413": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2414": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2415": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        497,
        596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2416": {
      "offset": [
        1004,
        1011
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "2418": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        1004,
        1011
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "SUB"
    },
    "2427": {
      "offset": [
        1004,
        1011
      ],
      "op": "AND",
      "path": "3"
    },
    "2428": {
      "offset": [
        990,
        1000
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2429": {
      "offset": [
        990,
        1011
      ],
      "op": "EQ",
      "path": "3"
    },
    "2430": {
      "offset": [
        982,
        1049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B8"
    },
    "2433": {
      "offset": [
        982,
        1049
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2434": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2436": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2445": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2446": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2448": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2449": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2450": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2451": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2453": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2454": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2455": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2456": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "SUB",
      "path": "3"
    },
    "2457": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2458": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2459": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2461": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2462": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2463": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2465": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2466": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2467": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17D2"
    },
    "2470": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2472": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2473": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2474": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2476": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2477": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2478": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "POP",
      "path": "3"
    },
    "2479": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "POP",
      "path": "3"
    },
    "2480": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2482": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2483": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2484": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2485": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "SUB",
      "path": "3"
    },
    "2486": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2487": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2488": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        982,
        1049
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2489": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4058,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x7"
    },
    "2491": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4058,
        4062
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2492": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D3"
    },
    "2495": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4036,
        4053
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2496": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4031
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C7"
    },
    "2499": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4029
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D0"
    },
    "2502": {
      "fn": "DataTokenTemplate.mint",
      "jump": "i",
      "offset": [
        4018,
        4031
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2503": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4031
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2504": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4035
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2505": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4054
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "2510": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4035
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF85"
    },
    "2513": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4054
      ],
      "op": "AND",
      "path": "3"
    },
    "2514": {
      "fn": "DataTokenTemplate.mint",
      "jump": "i",
      "offset": [
        4018,
        4054
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2515": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2516": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4062
      ],
      "op": "GT",
      "path": "3"
    },
    "2517": {
      "branch": 66,
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4018,
        4062
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2518": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA15"
    },
    "2521": {
      "branch": 66,
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2522": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2524": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2525": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2526": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2532": {
      "op": "SHL"
    },
    "2533": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2534": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2535": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2537": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2539": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2540": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "ADD",
      "path": "3"
    },
    "2541": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2542": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "2544": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2546": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2547": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "ADD",
      "path": "3"
    },
    "2548": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2549": {
      "op": "PUSH12",
      "value": "0x18D85C08195E18D959591959"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "2564": {
      "op": "SHL"
    },
    "2565": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2567": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2568": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "ADD",
      "path": "3"
    },
    "2569": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2570": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2571": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2572": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2573": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2574": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2575": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "SUB",
      "path": "3"
    },
    "2576": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2578": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "ADD",
      "path": "3"
    },
    "2579": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2580": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2581": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4010,
        4079
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2582": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4083,
        4101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2584": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4104,
        4113
      ],
      "op": "GAS",
      "path": "3"
    },
    "2585": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4083,
        4113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2586": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4083,
        4113
      ],
      "op": "POP",
      "path": "3"
    },
    "2587": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4123,
        4159
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0xA24"
    },
    "2590": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4129,
        4139
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2591": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4141,
        4158
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2592": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4123,
        4128
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFDF"
    },
    "2595": {
      "fn": "DataTokenTemplate.mint",
      "jump": "i",
      "offset": [
        4123,
        4159
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2596": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4123,
        4159
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2597": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4162,
        4179
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2599": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4182,
        4191
      ],
      "op": "GAS",
      "path": "3"
    },
    "2600": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4162,
        4191
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4215,
        4237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2603": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4215,
        4237
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2604": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4215,
        4237
      ],
      "op": "SUB",
      "path": "3"
    },
    "2605": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4269,
        4280
      ],
      "op": "GASPRICE",
      "path": "3"
    },
    "2606": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4258,
        4280
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2607": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4258,
        4280
      ],
      "op": "MUL",
      "path": "3"
    },
    "2608": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4196,
        4212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2610": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4297,
        4338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3B"
    },
    "2613": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4311,
        4328
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2614": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4258,
        4280
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2615": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4297,
        4310
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD0A"
    },
    "2618": {
      "fn": "DataTokenTemplate.mint",
      "jump": "i",
      "offset": [
        4297,
        4338
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2619": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4297,
        4338
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2620": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4283,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2621": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4283,
        4338
      ],
      "op": "POP",
      "path": "3"
    },
    "2622": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4371,
        4374
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 11
    },
    "2623": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4358,
        4367
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2624": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4358,
        4374
      ],
      "op": "LT",
      "path": "3"
    },
    "2625": {
      "branch": 67,
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4358,
        4374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2626": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA92"
    },
    "2629": {
      "branch": 67,
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2630": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2632": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2633": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2634": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2640": {
      "op": "SHL"
    },
    "2641": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2642": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2643": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2645": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2647": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2648": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "ADD",
      "path": "3"
    },
    "2649": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2650": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "2652": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2654": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2655": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "ADD",
      "path": "3"
    },
    "2656": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2657": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x6E6F7420656E6F7567682066756E647320746F206D696E740000000000000000"
    },
    "2690": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2692": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2693": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "ADD",
      "path": "3"
    },
    "2694": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2695": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2696": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2697": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2698": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2699": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2700": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "SUB",
      "path": "3"
    },
    "2701": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2703": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "ADD",
      "path": "3"
    },
    "2704": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2705": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2706": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4350,
        4403
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2707": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4424
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0xA"
    },
    "2709": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4424
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2710": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2712": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2719": {
      "op": "SHL"
    },
    "2720": {
      "op": "SUB"
    },
    "2721": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4424
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2722": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4424
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2723": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4424
      ],
      "op": "AND",
      "path": "3"
    },
    "2724": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4424
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2725": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2726": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2727": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FC"
    },
    "2730": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "MUL",
      "path": "3"
    },
    "2731": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2732": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4434,
        4437
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2733": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4434,
        4437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2734": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2736": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2737": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4424
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2738": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2739": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4434,
        4437
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2740": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4424
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2741": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2742": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "CALL",
      "path": "3"
    },
    "2743": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2744": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "POP",
      "path": "3"
    },
    "2745": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "POP",
      "path": "3"
    },
    "2746": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "POP",
      "path": "3"
    },
    "2747": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "POP",
      "path": "3"
    },
    "2748": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2749": {
      "op": "DUP1"
    },
    "2750": {
      "op": "ISZERO"
    },
    "2751": {
      "op": "PUSH2",
      "value": "0xACC"
    },
    "2754": {
      "op": "JUMPI"
    },
    "2755": {
      "op": "RETURNDATASIZE"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2758": {
      "op": "DUP1"
    },
    "2759": {
      "op": "RETURNDATACOPY"
    },
    "2760": {
      "op": "RETURNDATASIZE"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2763": {
      "op": "REVERT"
    },
    "2764": {
      "op": "JUMPDEST"
    },
    "2765": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        4413,
        4438
      ],
      "op": "POP",
      "path": "3"
    },
    "2766": {
      "offset": [
        1059,
        1060
      ],
      "op": "POP",
      "path": "3"
    },
    "2767": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        1059,
        1060
      ],
      "op": "POP",
      "path": "3"
    },
    "2768": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        1059,
        1060
      ],
      "op": "POP",
      "path": "3"
    },
    "2769": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        1059,
        1060
      ],
      "op": "POP",
      "path": "3"
    },
    "2770": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        1059,
        1060
      ],
      "op": "POP",
      "path": "3"
    },
    "2771": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "POP",
      "path": "3"
    },
    "2772": {
      "fn": "DataTokenTemplate.mint",
      "offset": [
        3889,
        4445
      ],
      "op": "POP",
      "path": "3"
    },
    "2773": {
      "fn": "DataTokenTemplate.mint",
      "jump": "o",
      "offset": [
        3889,
        4445
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2774": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1689,
        1797
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2781": {
      "op": "SHL"
    },
    "2782": {
      "op": "SUB"
    },
    "2783": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "AND",
      "path": "5",
      "statement": 13
    },
    "2784": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1746,
        1753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2786": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2787": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2788": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2789": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2791": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2792": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2793": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2794": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2796": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2797": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2798": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2799": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1772,
        1790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2800": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        1689,
        1797
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2801": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        4983,
        5062
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2802": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2804": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        519,
        525
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2805": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2807": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        519,
        525
      ],
      "op": "AND",
      "path": "6"
    },
    "2808": {
      "offset": [
        518,
        525
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2809": {
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB33"
    },
    "2812": {
      "offset": [
        497,
        596
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2813": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2815": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2816": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2822": {
      "op": "SHL"
    },
    "2823": {
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2824": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2825": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2827": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2828": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2829": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2830": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2832": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2833": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2834": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2835": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "2836": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2837": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2838": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "2840": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2841": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2842": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2844": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2845": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2846": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1754"
    },
    "2849": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "2851": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2852": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2853": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2855": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "2856": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2857": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "2858": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "2859": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2861": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2862": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2863": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2864": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "2865": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2866": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2867": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        497,
        596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2868": {
      "offset": [
        1004,
        1011
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "2870": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        1004,
        1011
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "op": "SUB"
    },
    "2879": {
      "offset": [
        1004,
        1011
      ],
      "op": "AND",
      "path": "3"
    },
    "2880": {
      "offset": [
        990,
        1000
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2881": {
      "offset": [
        990,
        1011
      ],
      "op": "EQ",
      "path": "3"
    },
    "2882": {
      "offset": [
        982,
        1049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7C"
    },
    "2885": {
      "offset": [
        982,
        1049
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2886": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2888": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2897": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2898": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2900": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2901": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2902": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2903": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2905": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2906": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2907": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2908": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "SUB",
      "path": "3"
    },
    "2909": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2910": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2911": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2913": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2914": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2915": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2917": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2918": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2919": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17D2"
    },
    "2922": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2924": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2925": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2926": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2928": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "2929": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2930": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "POP",
      "path": "3"
    },
    "2931": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "POP",
      "path": "3"
    },
    "2932": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2934": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2935": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2936": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2937": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "SUB",
      "path": "3"
    },
    "2938": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2939": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2940": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        982,
        1049
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2941": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        5042,
        5048
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x3"
    },
    "2943": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        5042,
        5055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2944": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        5042,
        5055
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2947": {
      "op": "NOT"
    },
    "2948": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        5042,
        5055
      ],
      "op": "AND",
      "path": "3"
    },
    "2949": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        5051,
        5055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2951": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        5042,
        5055
      ],
      "op": "OR",
      "path": "3"
    },
    "2952": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        5042,
        5055
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2953": {
      "fn": "DataTokenTemplate.pause",
      "offset": [
        5042,
        5055
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2954": {
      "fn": "DataTokenTemplate.pause",
      "jump": "o",
      "offset": [
        4983,
        5062
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2955": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2956": {
      "offset": [
        868,
        879
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2958": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        868,
        879
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2959": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2307,
        2311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2961": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2307,
        2311
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2962": {
      "offset": [
        868,
        879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2965": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        868,
        879
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2966": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        868,
        879
      ],
      "op": "DIV",
      "path": "3"
    },
    "2967": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        868,
        879
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2969": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        868,
        879
      ],
      "op": "AND",
      "path": "3"
    },
    "2970": {
      "offset": [
        867,
        879
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2971": {
      "offset": [
        859,
        922
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD5"
    },
    "2974": {
      "offset": [
        859,
        922
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2975": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2977": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "offset": [
        859,
        922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2986": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2987": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2989": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "ADD",
      "path": "3"
    },
    "2990": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2991": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2992": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2994": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "ADD",
      "path": "3"
    },
    "2995": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2996": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2997": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "SUB",
      "path": "3"
    },
    "2998": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2999": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3000": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "3002": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3003": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3004": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3006": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "ADD",
      "path": "3"
    },
    "3007": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3008": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1868"
    },
    "3011": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "3013": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3014": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3015": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3017": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "ADD",
      "path": "3"
    },
    "3018": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3019": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "POP",
      "path": "3"
    },
    "3020": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "POP",
      "path": "3"
    },
    "3021": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3023": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3024": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3025": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3026": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "SUB",
      "path": "3"
    },
    "3027": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3028": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3029": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        859,
        922
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3030": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2332,
        2388
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 15,
      "value": "0xBE3"
    },
    "3033": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2344,
        2348
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3034": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2350,
        2356
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3035": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2358,
        2364
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3036": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2366,
        2369
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3037": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2371,
        2375
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3038": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2377,
        2387
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3039": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2332,
        2343
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10CF"
    },
    "3042": {
      "fn": "DataTokenTemplate.initialize",
      "jump": "i",
      "offset": [
        2332,
        2388
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3043": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2332,
        2388
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3044": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2325,
        2388
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "3045": {
      "fn": "DataTokenTemplate.initialize",
      "offset": [
        2062,
        2395
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "3046": {
      "op": "POP"
    },
    "3047": {
      "op": "POP"
    },
    "3048": {
      "op": "POP"
    },
    "3049": {
      "op": "POP"
    },
    "3050": {
      "op": "POP"
    },
    "3051": {
      "op": "POP"
    },
    "3052": {
      "op": "POP"
    },
    "3053": {
      "fn": "DataTokenTemplate.initialize",
      "jump": "o",
      "offset": [
        2062,
        2395
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3054": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6047,
        6131
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3055": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6117,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x5"
    },
    "3057": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3058": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3059": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3061": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3062": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3063": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3065": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3067": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3071": {
      "op": "NOT"
    },
    "3072": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3075": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3077": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP9",
      "path": "3"
    },
    "3078": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "AND",
      "path": "3"
    },
    "3079": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3080": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "MUL",
      "path": "3"
    },
    "3081": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "ADD",
      "path": "3"
    },
    "3082": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3083": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3084": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "AND",
      "path": "3"
    },
    "3085": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3086": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3087": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3088": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DIV",
      "path": "3"
    },
    "3089": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3090": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3091": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "ADD",
      "path": "3"
    },
    "3092": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3093": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3094": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DIV",
      "path": "3"
    },
    "3095": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3096": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "MUL",
      "path": "3"
    },
    "3097": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3098": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "ADD",
      "path": "3"
    },
    "3099": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3100": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "ADD",
      "path": "3"
    },
    "3101": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3102": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3103": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3104": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3105": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3106": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3107": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6085,
        6098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3109": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6085,
        6098
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3110": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3111": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3112": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6117,
        6124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3113": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6117,
        6124
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3114": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3115": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "ADD",
      "path": "3"
    },
    "3116": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6117,
        6124
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3117": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3118": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3119": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3120": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76D"
    },
    "3123": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3124": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3125": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3127": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "LT",
      "path": "3"
    },
    "3128": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x742"
    },
    "3131": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3132": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3135": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3136": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3137": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3138": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DIV",
      "path": "3"
    },
    "3139": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "MUL",
      "path": "3"
    },
    "3140": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3141": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3142": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3143": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3145": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "ADD",
      "path": "3"
    },
    "3146": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3147": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76D"
    },
    "3150": {
      "fn": "DataTokenTemplate.symbol",
      "offset": [
        6110,
        6124
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3151": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3671,
        3904
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3152": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3154": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        519,
        525
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3155": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3820,
        3824
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3157": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3820,
        3824
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3158": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3160": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        519,
        525
      ],
      "op": "AND",
      "path": "6"
    },
    "3161": {
      "offset": [
        518,
        525
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3162": {
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC94"
    },
    "3165": {
      "offset": [
        497,
        596
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3166": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3168": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3177": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3178": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3180": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3181": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3182": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3183": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3185": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3186": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3187": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3188": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "3189": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3190": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3191": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "3193": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3194": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3195": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3197": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3198": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3199": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1754"
    },
    "3202": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "3204": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3205": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "3206": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3208": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3209": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3210": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "3211": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "3212": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3214": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3215": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3216": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3217": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "3218": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3219": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3220": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        497,
        596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3221": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3848,
        3897
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 17,
      "value": "0x7C7"
    },
    "3224": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3872,
        3879
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3225": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3881,
        3896
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3226": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "offset": [
        3848,
        3871
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x128C"
    },
    "3229": {
      "fn": "ERC20Pausable.decreaseAllowance",
      "jump": "i",
      "offset": [
        3848,
        3897
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3230": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1144,
        1329
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3231": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3233": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        519,
        525
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3234": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1269,
        1273
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3236": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1269,
        1273
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3237": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3239": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        519,
        525
      ],
      "op": "AND",
      "path": "6"
    },
    "3240": {
      "offset": [
        518,
        525
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3241": {
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCE3"
    },
    "3244": {
      "offset": [
        497,
        596
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3245": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3247": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3256": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3257": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3259": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3260": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3261": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3262": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3264": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3265": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3266": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3267": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "3268": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3269": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3270": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "3272": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3273": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3274": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3276": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3277": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3278": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1754"
    },
    "3281": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "3283": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3284": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "3285": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3287": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3288": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3289": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "3290": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "3291": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3293": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3294": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3295": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3296": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "3297": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3298": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3299": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        497,
        596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3300": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1297,
        1322
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 18,
      "value": "0x7C7"
    },
    "3303": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1312,
        1314
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3304": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1316,
        1321
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3305": {
      "fn": "ERC20Pausable.transfer",
      "offset": [
        1297,
        1311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12FA"
    },
    "3308": {
      "fn": "ERC20Pausable.transfer",
      "jump": "i",
      "offset": [
        1297,
        1322
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3309": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        6992,
        7097
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3310": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        7071,
        7078
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x9"
    },
    "3312": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        7071,
        7078
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "op": "SUB"
    },
    "3321": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        7071,
        7089
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3322": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        7071,
        7089
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3323": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        7071,
        7089
      ],
      "op": "AND",
      "path": "3"
    },
    "3324": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        7071,
        7078
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3325": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        7071,
        7078
      ],
      "op": "AND",
      "path": "3"
    },
    "3326": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        7071,
        7089
      ],
      "op": "EQ",
      "path": "3"
    },
    "3327": {
      "fn": "DataTokenTemplate.isMinter",
      "offset": [
        7071,
        7089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3328": {
      "fn": "DataTokenTemplate.isMinter",
      "jump": "o",
      "offset": [
        6992,
        7097
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3329": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7531,
        7607
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3330": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7594,
        7600
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 20,
      "value": "0x3"
    },
    "3332": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7594,
        7600
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3333": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7594,
        7600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "3335": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7594,
        7600
      ],
      "op": "AND",
      "path": "3"
    },
    "3336": {
      "fn": "DataTokenTemplate.isPaused",
      "offset": [
        7531,
        7607
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3337": {
      "fn": "DataTokenTemplate.isPaused",
      "jump": "o",
      "offset": [
        7531,
        7607
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3338": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4451,
        4763
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3339": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4547,
        4554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3341": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4592,
        4594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3343": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4572,
        4589
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3344": {
      "branch": 68,
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4572,
        4594
      ],
      "op": "LT",
      "path": "3"
    },
    "3345": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4568,
        4757
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3346": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4568,
        4757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2D"
    },
    "3349": {
      "branch": 68,
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4568,
        4757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3350": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4611,
        4626
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0xD26"
    },
    "3353": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4611,
        4618
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3354": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4623,
        4625
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "3356": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4611,
        4626
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3361": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4611,
        4622
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130E"
    },
    "3364": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4611,
        4626
      ],
      "op": "AND",
      "path": "3"
    },
    "3365": {
      "fn": "DataTokenTemplate._calculateFee",
      "jump": "i",
      "offset": [
        4611,
        4626
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3366": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4611,
        4626
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3367": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4604,
        4626
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3368": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4604,
        4626
      ],
      "op": "POP",
      "path": "3"
    },
    "3369": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4604,
        4626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7CA"
    },
    "3372": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4604,
        4626
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3373": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4568,
        4757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3374": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4665,
        4668
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "3376": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4645,
        4662
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3377": {
      "branch": 69,
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4645,
        4668
      ],
      "op": "LT",
      "path": "3"
    },
    "3378": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4641,
        4757
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3379": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4641,
        4757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD47"
    },
    "3382": {
      "branch": 69,
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4641,
        4757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3383": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4679,
        4693
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 22,
      "value": "0xD26"
    },
    "3386": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4679,
        4686
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3387": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4691,
        4692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "3389": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4679,
        4693
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3394": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4679,
        4690
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130E"
    },
    "3397": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4679,
        4693
      ],
      "op": "AND",
      "path": "3"
    },
    "3398": {
      "fn": "DataTokenTemplate._calculateFee",
      "jump": "i",
      "offset": [
        4679,
        4693
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3399": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4641,
        4757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3400": {
      "op": "POP"
    },
    "3401": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4747,
        4754
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 23
    },
    "3402": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4740,
        4754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7CA"
    },
    "3405": {
      "fn": "DataTokenTemplate._calculateFee",
      "offset": [
        4740,
        4754
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3406": {
      "fn": "ERC20.allowance",
      "offset": [
        2213,
        2345
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3413": {
      "op": "SHL"
    },
    "3414": {
      "op": "SUB"
    },
    "3415": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 24
    },
    "3416": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3417": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "AND",
      "path": "5"
    },
    "3418": {
      "fn": "ERC20.allowance",
      "offset": [
        2285,
        2292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3420": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3421": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3422": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3423": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2322
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3425": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3427": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3428": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3429": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3430": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3432": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3433": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3434": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2329
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3435": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3436": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3437": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3438": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "AND",
      "path": "5"
    },
    "3439": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3440": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3441": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3442": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3443": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3444": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3445": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3446": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3447": {
      "fn": "ERC20.allowance",
      "offset": [
        2311,
        2338
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3448": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2213,
        2345
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3449": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5611,
        5711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3450": {
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3452": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        519,
        525
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3453": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        519,
        525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3455": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        519,
        525
      ],
      "op": "AND",
      "path": "6"
    },
    "3456": {
      "offset": [
        518,
        525
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3457": {
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDBB"
    },
    "3460": {
      "offset": [
        497,
        596
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3461": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3463": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3464": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3470": {
      "op": "SHL"
    },
    "3471": {
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3472": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3473": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3475": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3476": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3477": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3478": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3480": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3481": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3482": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3483": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "3484": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3485": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3486": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "3488": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3489": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3490": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3492": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3493": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3494": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1754"
    },
    "3497": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2C"
    },
    "3499": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3500": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "3501": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3503": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "ADD",
      "path": "6"
    },
    "3504": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3505": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "3506": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "POP",
      "path": "6"
    },
    "3507": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3509": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3510": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3511": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3512": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "SUB",
      "path": "6"
    },
    "3513": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3514": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3515": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        497,
        596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3516": {
      "offset": [
        1004,
        1011
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "3518": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        1004,
        1011
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3525": {
      "op": "SHL"
    },
    "3526": {
      "op": "SUB"
    },
    "3527": {
      "offset": [
        1004,
        1011
      ],
      "op": "AND",
      "path": "3"
    },
    "3528": {
      "offset": [
        990,
        1000
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3529": {
      "offset": [
        990,
        1011
      ],
      "op": "EQ",
      "path": "3"
    },
    "3530": {
      "offset": [
        982,
        1049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE04"
    },
    "3533": {
      "offset": [
        982,
        1049
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3534": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3536": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3543": {
      "op": "SHL"
    },
    "3544": {
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3545": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3546": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3548": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "3549": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3550": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3551": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3553": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "3554": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3555": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3556": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "SUB",
      "path": "3"
    },
    "3557": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3558": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3559": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3561": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3562": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3563": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3565": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "3566": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3567": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17D2"
    },
    "3570": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3572": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3573": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3574": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3576": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "3"
    },
    "3577": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3578": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "POP",
      "path": "3"
    },
    "3579": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "POP",
      "path": "3"
    },
    "3580": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3582": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3583": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3584": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3585": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "SUB",
      "path": "3"
    },
    "3586": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3587": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3588": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        982,
        1049
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3589": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5695
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x9"
    },
    "3591": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3592": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3599": {
      "op": "SHL"
    },
    "3600": {
      "op": "SUB"
    },
    "3601": {
      "op": "NOT"
    },
    "3602": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "AND",
      "path": "3"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3609": {
      "op": "SHL"
    },
    "3610": {
      "op": "SUB"
    },
    "3611": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3612": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3613": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3614": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "AND",
      "path": "3"
    },
    "3615": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3616": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3617": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3618": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "OR",
      "path": "3"
    },
    "3619": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3620": {
      "fn": "DataTokenTemplate.setMinter",
      "offset": [
        5688,
        5704
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3621": {
      "fn": "DataTokenTemplate.setMinter",
      "jump": "o",
      "offset": [
        5611,
        5711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3622": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6256,
        6336
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3623": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6324,
        6329
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0x6"
    },
    "3625": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3626": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3627": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3629": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3630": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3631": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3633": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3635": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3639": {
      "op": "NOT"
    },
    "3640": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3643": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3645": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP9",
      "path": "3"
    },
    "3646": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "AND",
      "path": "3"
    },
    "3647": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3648": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "MUL",
      "path": "3"
    },
    "3649": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "ADD",
      "path": "3"
    },
    "3650": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3651": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3652": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "AND",
      "path": "3"
    },
    "3653": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3654": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3655": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3656": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DIV",
      "path": "3"
    },
    "3657": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3658": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3659": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "ADD",
      "path": "3"
    },
    "3660": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3661": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3662": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DIV",
      "path": "3"
    },
    "3663": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3664": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "MUL",
      "path": "3"
    },
    "3665": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3666": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "ADD",
      "path": "3"
    },
    "3667": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3668": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "ADD",
      "path": "3"
    },
    "3669": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3670": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3671": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3672": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3673": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3674": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3675": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6292,
        6305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3677": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6292,
        6305
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3678": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3679": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3680": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6324,
        6329
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3681": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6324,
        6329
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3682": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3683": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "ADD",
      "path": "3"
    },
    "3684": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6324,
        6329
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3685": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3686": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3687": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3688": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76D"
    },
    "3691": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3692": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3693": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3695": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "LT",
      "path": "3"
    },
    "3696": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x742"
    },
    "3699": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3700": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3703": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3704": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3705": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3706": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DIV",
      "path": "3"
    },
    "3707": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "MUL",
      "path": "3"
    },
    "3708": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3709": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3710": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3711": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3713": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "ADD",
      "path": "3"
    },
    "3714": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3715": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76D"
    },
    "3718": {
      "fn": "DataTokenTemplate.blob",
      "offset": [
        6317,
        6329
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3719": {
      "fn": "ERC20.approve",
      "offset": [
        2483,
        2632
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3720": {
      "fn": "ERC20.approve",
      "offset": [
        2549,
        2553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3722": {
      "fn": "ERC20.approve",
      "offset": [
        2565,
        2604
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 27,
      "value": "0xE9B"
    },
    "3725": {
      "fn": "ERC20.approve",
      "offset": [
        2574,
        2586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE94"
    },
    "3728": {
      "fn": "ERC20.approve",
      "offset": [
        2574,
        2584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1350"
    },
    "3731": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2574,
        2586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3732": {
      "fn": "ERC20.approve",
      "offset": [
        2574,
        2586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3733": {
      "fn": "ERC20.approve",
      "offset": [
        2588,
        2595
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3734": {
      "fn": "ERC20.approve",
      "offset": [
        2597,
        2603
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3735": {
      "fn": "ERC20.approve",
      "offset": [
        2565,
        2573
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1354"
    },
    "3738": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2565,
        2604
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3739": {
      "fn": "ERC20.approve",
      "offset": [
        2565,
        2604
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "fn": "ERC20.approve",
      "offset": [
        2621,
        2625
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 28,
      "value": "0x1"
    },
    "3743": {
      "fn": "ERC20.approve",
      "offset": [
        2483,
        2632
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3744": {
      "fn": "ERC20.approve",
      "offset": [
        2483,
        2632
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3745": {
      "fn": "ERC20.approve",
      "offset": [
        2483,
        2632
      ],
      "op": "POP",
      "path": "5"
    },
    "3746": {
      "fn": "ERC20.approve",
      "offset": [
        2483,
        2632
      ],
      "op": "POP",
      "path": "5"
    },
    "3747": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2483,
        2632
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3748": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3090,
        3390
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3179,
        3183
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3195,
        3231
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 29,
      "value": "0xEB1"
    },
    "3754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3205,
        3211
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3213,
        3222
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3224,
        3230
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3195,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1440"
    },
    "3760": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3195,
        3231
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3195,
        3231
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3241,
        3362
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 30,
      "value": "0xF27"
    },
    "3765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3250,
        3256
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3270
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEBD"
    },
    "3769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3268
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1350"
    },
    "3772": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3258,
        3270
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3270
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF22"
    },
    "3777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3310,
        3316
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "3784": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "ADD",
      "path": "5"
    },
    "3785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3788": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "3791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3795": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "ADD",
      "path": "5"
    },
    "3796": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1840"
    },
    "3799": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "3801": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3802": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3809": {
      "op": "SHL"
    },
    "3810": {
      "op": "SUB"
    },
    "3811": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "DUP11",
      "path": "5"
    },
    "3812": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "AND",
      "path": "5"
    },
    "3813": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3815": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3816": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3817": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3818": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3283
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3820": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3822": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3823": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3825": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3826": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3827": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3291
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3828": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3292,
        3304
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEFB"
    },
    "3831": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3292,
        3302
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1350"
    },
    "3834": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3292,
        3304
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3835": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3292,
        3304
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3842": {
      "op": "SHL"
    },
    "3843": {
      "op": "SUB"
    },
    "3844": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "AND",
      "path": "5"
    },
    "3845": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3846": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3847": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3849": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3850": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "ADD",
      "path": "5"
    },
    "3851": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3852": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3853": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3854": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3855": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3857": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "ADD",
      "path": "5"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3860": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3861": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3862": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3305
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3863": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3864": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "3869": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3309
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x159C"
    },
    "3872": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "AND",
      "path": "5"
    },
    "3873": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3272,
        3361
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3874": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3272,
        3361
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3875": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3241,
        3249
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1354"
    },
    "3878": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3241,
        3362
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3879": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3241,
        3362
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3880": {
      "op": "POP"
    },
    "3881": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3379,
        3383
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 31,
      "value": "0x1"
    },
    "3883": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3090,
        3390
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3884": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3090,
        3390
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3885": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3090,
        3390
      ],
      "op": "POP",
      "path": "5"
    },
    "3886": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3090,
        3390
      ],
      "op": "POP",
      "path": "5"
    },
    "3887": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3090,
        3390
      ],
      "op": "POP",
      "path": "5"
    },
    "3888": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3090,
        3390
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3889": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3785,
        3992
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3865,
        3869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3892": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3881,
        3964
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 32,
      "value": "0xE9B"
    },
    "3895": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3890,
        3902
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3E"
    },
    "3898": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3890,
        3900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1350"
    },
    "3901": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3890,
        3902
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3902": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3890,
        3902
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3903": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3904,
        3911
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3904": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF22"
    },
    "3907": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3952,
        3962
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3908": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3910": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3912": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3925,
        3937
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF4F"
    },
    "3915": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3925,
        3935
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1350"
    },
    "3918": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3925,
        3937
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3919": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3925,
        3937
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3926": {
      "op": "SHL"
    },
    "3927": {
      "op": "SUB"
    },
    "3928": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3929": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3930": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "AND",
      "path": "5"
    },
    "3931": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3932": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3933": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3935": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3936": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3937": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "ADD",
      "path": "5"
    },
    "3938": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3939": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3940": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3941": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3942": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3944": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3945": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3946": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "ADD",
      "path": "5"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3949": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3950": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3951": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3938
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3952": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3953": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "DUP13",
      "path": "5"
    },
    "3954": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "AND",
      "path": "5"
    },
    "3955": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3956": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3957": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3958": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3959": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3960": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3961": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3962": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3947
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3963": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3963
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "3968": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3951
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF85"
    },
    "3971": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3913,
        3963
      ],
      "op": "AND",
      "path": "5"
    },
    "3972": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3913,
        3963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3973": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3974": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3976": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3977": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3978": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "12"
    },
    "3979": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 33
    },
    "3980": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3981": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "12"
    },
    "3982": {
      "branch": 80,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3983": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7C7"
    },
    "3986": {
      "branch": 80,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3987": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3989": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3990": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3997": {
      "op": "SHL"
    },
    "3998": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3999": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4000": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4002": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4004": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4005": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "12"
    },
    "4006": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4007": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1B"
    },
    "4009": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "4011": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4012": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "12"
    },
    "4013": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4014": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "4047": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "4049": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4050": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "12"
    },
    "4051": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4052": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4053": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4054": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4055": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4056": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4057": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "12"
    },
    "4058": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "4060": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "12"
    },
    "4061": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4062": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4063": {
      "fn": "ERC20._mint",
      "offset": [
        5945,
        6247
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4070": {
      "op": "SHL"
    },
    "4071": {
      "op": "SUB"
    },
    "4072": {
      "fn": "ERC20._mint",
      "offset": [
        6020,
        6041
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 34
    },
    "4073": {
      "branch": 74,
      "fn": "ERC20._mint",
      "offset": [
        6020,
        6041
      ],
      "op": "AND",
      "path": "5"
    },
    "4074": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x103A"
    },
    "4077": {
      "branch": 74,
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4078": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4080": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4081": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4088": {
      "op": "SHL"
    },
    "4089": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4090": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4091": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4093": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4095": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4096": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "ADD",
      "path": "5"
    },
    "4097": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4098": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4100": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4102": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4103": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "ADD",
      "path": "5"
    },
    "4104": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4105": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "4138": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "4140": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4141": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "ADD",
      "path": "5"
    },
    "4142": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4143": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4144": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4145": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4146": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4147": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4148": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "SUB",
      "path": "5"
    },
    "4149": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "4151": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "ADD",
      "path": "5"
    },
    "4152": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4153": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4154": {
      "fn": "ERC20._mint",
      "offset": [
        6012,
        6077
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4155": {
      "fn": "ERC20._mint",
      "offset": [
        6103,
        6115
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 35,
      "value": "0x2"
    },
    "4157": {
      "fn": "ERC20._mint",
      "offset": [
        6103,
        6115
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4158": {
      "fn": "ERC20._mint",
      "offset": [
        6103,
        6127
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x104D"
    },
    "4161": {
      "fn": "ERC20._mint",
      "offset": [
        6103,
        6127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4162": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6126
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4163": {
      "fn": "ERC20._mint",
      "offset": [
        6103,
        6127
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "4168": {
      "fn": "ERC20._mint",
      "offset": [
        6103,
        6119
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF85"
    },
    "4171": {
      "fn": "ERC20._mint",
      "offset": [
        6103,
        6127
      ],
      "op": "AND",
      "path": "5"
    },
    "4172": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6103,
        6127
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4173": {
      "fn": "ERC20._mint",
      "offset": [
        6103,
        6127
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4174": {
      "fn": "ERC20._mint",
      "offset": [
        6088,
        6100
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4176": {
      "fn": "ERC20._mint",
      "offset": [
        6088,
        6127
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4183": {
      "op": "SHL"
    },
    "4184": {
      "op": "SUB"
    },
    "4185": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 36
    },
    "4186": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "AND",
      "path": "5"
    },
    "4187": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4189": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4190": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4191": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4192": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4194": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4195": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4196": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4197": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4199": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4200": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4201": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6176
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4202": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1079"
    },
    "4205": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4206": {
      "fn": "ERC20._mint",
      "offset": [
        6181,
        6187
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4207": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6188
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "4212": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6180
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF85"
    },
    "4215": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6188
      ],
      "op": "AND",
      "path": "5"
    },
    "4216": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6158,
        6188
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4217": {
      "fn": "ERC20._mint",
      "offset": [
        6158,
        6188
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4224": {
      "op": "SHL"
    },
    "4225": {
      "op": "SUB"
    },
    "4226": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4227": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "AND",
      "path": "5"
    },
    "4228": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4230": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4231": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4232": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4233": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4235": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4236": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4237": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4238": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4240": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4241": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4242": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4243": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6188
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4244": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4245": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6188
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4246": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6188
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4247": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 37
    },
    "4248": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4249": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4250": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4251": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4252": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4253": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4254": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4255": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6155
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4256": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6146
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4257": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6146
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4258": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4291": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4292": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4293": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4294": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "SUB",
      "path": "5"
    },
    "4295": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4296": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4297": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "ADD",
      "path": "5"
    },
    "4298": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4299": {
      "fn": "ERC20._mint",
      "offset": [
        6203,
        6240
      ],
      "op": "LOG3",
      "path": "5"
    },
    "4300": {
      "fn": "ERC20._mint",
      "offset": [
        5945,
        6247
      ],
      "op": "POP",
      "path": "5"
    },
    "4301": {
      "fn": "ERC20._mint",
      "offset": [
        5945,
        6247
      ],
      "op": "POP",
      "path": "5"
    },
    "4302": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        5945,
        6247
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4303": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2744,
        3528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4304": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2971,
        2975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4312": {
      "op": "SHL"
    },
    "4313": {
      "op": "SUB"
    },
    "4314": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2997,
        3017
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 38
    },
    "4315": {
      "branch": 70,
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2997,
        3017
      ],
      "op": "AND",
      "path": "3"
    },
    "4316": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1116"
    },
    "4319": {
      "branch": 70,
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4320": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4322": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4331": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4332": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4334": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "ADD",
      "path": "3"
    },
    "4335": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4336": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4337": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4339": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "ADD",
      "path": "3"
    },
    "4340": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4341": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4342": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "SUB",
      "path": "3"
    },
    "4343": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4344": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4345": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x27"
    },
    "4347": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4348": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4349": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4351": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "ADD",
      "path": "3"
    },
    "4352": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4353": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1819"
    },
    "4356": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x27"
    },
    "4358": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4359": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4360": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4362": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "ADD",
      "path": "3"
    },
    "4363": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4364": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "POP",
      "path": "3"
    },
    "4365": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "POP",
      "path": "3"
    },
    "4366": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4368": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4369": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4370": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4371": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "SUB",
      "path": "3"
    },
    "4372": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4373": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4374": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        2989,
        3061
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4381": {
      "op": "SHL"
    },
    "4382": {
      "op": "SUB"
    },
    "4383": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3077,
        3101
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 39
    },
    "4384": {
      "branch": 71,
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3077,
        3101
      ],
      "op": "AND",
      "path": "3"
    },
    "4385": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x115B"
    },
    "4388": {
      "branch": 71,
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4389": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4391": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4392": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4398": {
      "op": "SHL"
    },
    "4399": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4400": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4401": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4403": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "ADD",
      "path": "3"
    },
    "4404": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4405": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4406": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4408": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "ADD",
      "path": "3"
    },
    "4409": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4410": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4411": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "SUB",
      "path": "3"
    },
    "4412": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4413": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4414": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "4416": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4417": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4418": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4420": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "ADD",
      "path": "3"
    },
    "4421": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4422": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1907"
    },
    "4425": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "4427": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4428": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4429": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4431": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "ADD",
      "path": "3"
    },
    "4432": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4433": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "POP",
      "path": "3"
    },
    "4434": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "POP",
      "path": "3"
    },
    "4435": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4437": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4438": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4439": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4440": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "SUB",
      "path": "3"
    },
    "4441": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4442": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4443": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3069,
        3141
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4444": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3157,
        3164
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 40,
      "value": "0x9"
    },
    "4446": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3157,
        3164
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4453": {
      "op": "SHL"
    },
    "4454": {
      "op": "SUB"
    },
    "4455": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3157,
        3164
      ],
      "op": "AND",
      "path": "3"
    },
    "4456": {
      "branch": 72,
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3157,
        3178
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4457": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A3"
    },
    "4460": {
      "branch": 72,
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4461": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4463": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4464": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4470": {
      "op": "SHL"
    },
    "4471": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4472": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4473": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4475": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "ADD",
      "path": "3"
    },
    "4476": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4477": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4478": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4480": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "ADD",
      "path": "3"
    },
    "4481": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4482": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4483": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "SUB",
      "path": "3"
    },
    "4484": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4485": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4486": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x30"
    },
    "4488": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4489": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4490": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4492": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "ADD",
      "path": "3"
    },
    "4493": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4494": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17A2"
    },
    "4497": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x30"
    },
    "4499": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4500": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4501": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4503": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "ADD",
      "path": "3"
    },
    "4504": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4505": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "POP",
      "path": "3"
    },
    "4506": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "POP",
      "path": "3"
    },
    "4507": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4509": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4510": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4511": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4512": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "SUB",
      "path": "3"
    },
    "4513": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4514": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4515": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3149,
        3231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4516": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3253,
        3254
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 41,
      "value": "0x0"
    },
    "4518": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3247,
        3250
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4519": {
      "branch": 73,
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3247,
        3254
      ],
      "op": "GT",
      "path": "3"
    },
    "4520": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F8"
    },
    "4523": {
      "branch": 73,
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4524": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4526": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4527": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4534": {
      "op": "SHL"
    },
    "4535": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4536": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4537": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4539": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4541": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4542": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "ADD",
      "path": "3"
    },
    "4543": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4544": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4546": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4548": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4549": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "ADD",
      "path": "3"
    },
    "4550": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4551": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x44617461546F6B656E54656D706C6174653A2043617020776173203C3D203000"
    },
    "4584": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "4586": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4587": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "ADD",
      "path": "3"
    },
    "4588": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4589": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4590": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4591": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4592": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4593": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4594": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "SUB",
      "path": "3"
    },
    "4595": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4597": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "ADD",
      "path": "3"
    },
    "4598": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4599": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4600": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3239,
        3290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4601": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3321,
        3322
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 42,
      "value": "0x0"
    },
    "4603": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3309,
        3318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4605": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3309,
        3322
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4606": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3332,
        3336
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 43,
      "value": "0x7"
    },
    "4608": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3332,
        3342
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4609": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3332,
        3342
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4610": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3332,
        3342
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4611": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 44
    },
    "4612": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4613": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1215"
    },
    "4616": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4617": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4619": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3357
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4620": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4622": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "DUP11",
      "path": "3"
    },
    "4623": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "ADD",
      "path": "3"
    },
    "4624": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4625": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1698"
    },
    "4628": {
      "fn": "DataTokenTemplate._initialize",
      "jump": "i",
      "offset": [
        3352,
        3364
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4629": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3352,
        3364
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4630": {
      "op": "POP"
    },
    "4631": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 45
    },
    "4632": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4633": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1229"
    },
    "4636": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4637": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3379
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "4639": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4640": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4642": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4643": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "ADD",
      "path": "3"
    },
    "4644": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4645": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1698"
    },
    "4648": {
      "fn": "DataTokenTemplate._initialize",
      "jump": "i",
      "offset": [
        3374,
        3386
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4649": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3374,
        3386
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4650": {
      "op": "POP"
    },
    "4651": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 46
    },
    "4652": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4653": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x123D"
    },
    "4656": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4657": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "4659": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4660": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4662": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "DUP10",
      "path": "3"
    },
    "4663": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "ADD",
      "path": "3"
    },
    "4664": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4665": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1698"
    },
    "4668": {
      "fn": "DataTokenTemplate._initialize",
      "jump": "i",
      "offset": [
        3396,
        3412
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4669": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3396,
        3412
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4670": {
      "op": "POP"
    },
    "4671": {
      "op": "POP"
    },
    "4672": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3429
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 47,
      "value": "0x9"
    },
    "4674": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4675": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4682": {
      "op": "SHL"
    },
    "4683": {
      "op": "SUB"
    },
    "4684": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "4685": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4686": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "AND",
      "path": "3"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4693": {
      "op": "SHL"
    },
    "4694": {
      "op": "SUB"
    },
    "4695": {
      "op": "NOT"
    },
    "4696": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4697": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4698": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "AND",
      "path": "3"
    },
    "4699": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "OR",
      "path": "3"
    },
    "4700": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4701": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4702": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4703": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3452
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 48,
      "value": "0xA"
    },
    "4705": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4706": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4707": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4708": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4709": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "4710": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "AND",
      "path": "3"
    },
    "4711": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4712": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "AND",
      "path": "3"
    },
    "4713": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "OR",
      "path": "3"
    },
    "4714": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4715": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4716": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3441,
        3465
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4717": {
      "op": "POP"
    },
    "4718": {
      "op": "POP"
    },
    "4719": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 49,
      "value": "0x3"
    },
    "4721": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4722": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4723": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4726": {
      "op": "NOT"
    },
    "4727": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "AND",
      "path": "3"
    },
    "4728": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3422,
        3438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4731": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4732": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4733": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "OR",
      "path": "3"
    },
    "4734": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4735": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4736": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4737": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4738": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3510,
        3521
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 50
    },
    "4739": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3510,
        3521
      ],
      "op": "DIV",
      "path": "3"
    },
    "4740": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3475,
        3493
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "4742": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3510,
        3521
      ],
      "op": "AND",
      "path": "3"
    },
    "4743": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3510,
        3521
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4744": {
      "fn": "DataTokenTemplate._initialize",
      "offset": [
        3510,
        3521
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "fn": "DataTokenTemplate._initialize",
      "jump": "o",
      "offset": [
        2744,
        3528
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4748": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4479,
        4737
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4749": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4564,
        4568
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4751": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4580,
        4709
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 51,
      "value": "0xE9B"
    },
    "4754": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4589,
        4601
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1299"
    },
    "4757": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4589,
        4599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1350"
    },
    "4760": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4589,
        4601
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4761": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4589,
        4601
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4762": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4603,
        4610
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4763": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF22"
    },
    "4766": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4651,
        4666
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4767": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4769": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4770": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4771": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4773": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "ADD",
      "path": "5"
    },
    "4774": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4776": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4777": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4778": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "4780": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4781": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4782": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4784": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "ADD",
      "path": "5"
    },
    "4785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192A"
    },
    "4788": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "4790": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "4792": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4796": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4624,
        4636
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12C3"
    },
    "4799": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4624,
        4634
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1350"
    },
    "4802": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4624,
        4636
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4803": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4624,
        4636
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4810": {
      "op": "SHL"
    },
    "4811": {
      "op": "SUB"
    },
    "4812": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4813": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4814": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "AND",
      "path": "5"
    },
    "4815": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4816": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4817": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4819": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4820": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4821": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "ADD",
      "path": "5"
    },
    "4822": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4823": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4824": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4825": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4826": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4828": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4829": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4830": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "ADD",
      "path": "5"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4833": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4834": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4835": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4637
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4836": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4837": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "DUP14",
      "path": "5"
    },
    "4838": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "AND",
      "path": "5"
    },
    "4839": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4840": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4841": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4842": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4843": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4844": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4845": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4846": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4646
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4847": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4848": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "4853": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4650
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x159C"
    },
    "4856": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4612,
        4708
      ],
      "op": "AND",
      "path": "5"
    },
    "4857": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4612,
        4708
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4858": {
      "fn": "ERC20.transfer",
      "offset": [
        2000,
        2155
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4859": {
      "fn": "ERC20.transfer",
      "offset": [
        2069,
        2073
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4861": {
      "fn": "ERC20.transfer",
      "offset": [
        2085,
        2127
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 52,
      "value": "0xE9B"
    },
    "4864": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2107
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1307"
    },
    "4867": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2105
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1350"
    },
    "4870": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2095,
        2107
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4871": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2107
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4872": {
      "fn": "ERC20.transfer",
      "offset": [
        2109,
        2118
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4873": {
      "fn": "ERC20.transfer",
      "offset": [
        2120,
        2126
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4874": {
      "fn": "ERC20.transfer",
      "offset": [
        2085,
        2094
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1440"
    },
    "4877": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2085,
        2127
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4878": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4879": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4881": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 53,
      "value": "0x7C7"
    },
    "4884": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4885": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4886": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4888": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4889": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4890": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4892": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "12"
    },
    "4893": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4895": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4896": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4897": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1A"
    },
    "4899": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4900": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4901": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4903": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "12"
    },
    "4904": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "4937": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4938": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4939": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "12"
    },
    "4940": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1633"
    },
    "4943": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4944": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4945": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 54
    },
    "4946": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4947": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4948": {
      "fn": "ERC20._approve",
      "offset": [
        7333,
        7665
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4955": {
      "op": "SHL"
    },
    "4956": {
      "op": "SUB"
    },
    "4957": {
      "fn": "ERC20._approve",
      "offset": [
        7426,
        7445
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 55
    },
    "4958": {
      "branch": 75,
      "fn": "ERC20._approve",
      "offset": [
        7426,
        7445
      ],
      "op": "AND",
      "path": "5"
    },
    "4959": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1399"
    },
    "4962": {
      "branch": 75,
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4963": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4965": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4974": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4975": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4977": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "ADD",
      "path": "5"
    },
    "4978": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4979": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4980": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4982": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "ADD",
      "path": "5"
    },
    "4983": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4984": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4985": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "SUB",
      "path": "5"
    },
    "4986": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4987": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4988": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4990": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4991": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4992": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4994": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "ADD",
      "path": "5"
    },
    "4995": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4996": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18E3"
    },
    "4999": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5001": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5002": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5003": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5005": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "ADD",
      "path": "5"
    },
    "5006": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5007": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "POP",
      "path": "5"
    },
    "5008": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "POP",
      "path": "5"
    },
    "5009": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5011": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5012": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5013": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5014": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "SUB",
      "path": "5"
    },
    "5015": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5016": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5017": {
      "fn": "ERC20._approve",
      "offset": [
        7418,
        7486
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5024": {
      "op": "SHL"
    },
    "5025": {
      "op": "SUB"
    },
    "5026": {
      "fn": "ERC20._approve",
      "offset": [
        7504,
        7525
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 56
    },
    "5027": {
      "branch": 76,
      "fn": "ERC20._approve",
      "offset": [
        7504,
        7525
      ],
      "op": "AND",
      "path": "5"
    },
    "5028": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13DE"
    },
    "5031": {
      "branch": 76,
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5032": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5034": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5035": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5041": {
      "op": "SHL"
    },
    "5042": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5043": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5044": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5046": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "ADD",
      "path": "5"
    },
    "5047": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5048": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5049": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5051": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "ADD",
      "path": "5"
    },
    "5052": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5053": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5054": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "SUB",
      "path": "5"
    },
    "5055": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5056": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5057": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x22"
    },
    "5059": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5060": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5061": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5063": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "ADD",
      "path": "5"
    },
    "5064": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5065": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1780"
    },
    "5068": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x22"
    },
    "5070": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5071": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5072": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5074": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "ADD",
      "path": "5"
    },
    "5075": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5076": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "POP",
      "path": "5"
    },
    "5077": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "POP",
      "path": "5"
    },
    "5078": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5080": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5081": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5082": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5083": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "SUB",
      "path": "5"
    },
    "5084": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5085": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5086": {
      "fn": "ERC20._approve",
      "offset": [
        7496,
        7564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5093": {
      "op": "SHL"
    },
    "5094": {
      "op": "SUB"
    },
    "5095": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 57
    },
    "5096": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5097": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "AND",
      "path": "5"
    },
    "5098": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5100": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5101": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5102": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5103": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5105": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5107": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5108": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5109": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5110": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5112": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5113": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5114": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7593
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5115": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5116": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5117": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "AND",
      "path": "5"
    },
    "5118": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5119": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5120": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5121": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5122": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5123": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5124": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5125": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5126": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5127": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7602
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5128": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7611
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5129": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5130": {
      "fn": "ERC20._approve",
      "offset": [
        7575,
        7611
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5131": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 58
    },
    "5132": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5133": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5134": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5135": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5136": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5137": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5138": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "5171": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5172": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5173": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5174": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "SUB",
      "path": "5"
    },
    "5175": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5176": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5177": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "ADD",
      "path": "5"
    },
    "5178": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5179": {
      "fn": "ERC20._approve",
      "offset": [
        7626,
        7658
      ],
      "op": "LOG3",
      "path": "5"
    },
    "5180": {
      "fn": "ERC20._approve",
      "offset": [
        7333,
        7665
      ],
      "op": "POP",
      "path": "5"
    },
    "5181": {
      "fn": "ERC20._approve",
      "offset": [
        7333,
        7665
      ],
      "op": "POP",
      "path": "5"
    },
    "5182": {
      "fn": "ERC20._approve",
      "offset": [
        7333,
        7665
      ],
      "op": "POP",
      "path": "5"
    },
    "5183": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        7333,
        7665
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5184": {
      "fn": "ERC20._transfer",
      "offset": [
        5211,
        5675
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5191": {
      "op": "SHL"
    },
    "5192": {
      "op": "SUB"
    },
    "5193": {
      "fn": "ERC20._transfer",
      "offset": [
        5308,
        5328
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 59
    },
    "5194": {
      "branch": 77,
      "fn": "ERC20._transfer",
      "offset": [
        5308,
        5328
      ],
      "op": "AND",
      "path": "5"
    },
    "5195": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1485"
    },
    "5198": {
      "branch": 77,
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5199": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5201": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5202": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5208": {
      "op": "SHL"
    },
    "5209": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5210": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5211": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5213": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "ADD",
      "path": "5"
    },
    "5214": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5215": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5216": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5218": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "ADD",
      "path": "5"
    },
    "5219": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5220": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5221": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "SUB",
      "path": "5"
    },
    "5222": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5223": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5224": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "5226": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5227": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5228": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5230": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "ADD",
      "path": "5"
    },
    "5231": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5232": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x188E"
    },
    "5235": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "5237": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5238": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5239": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5241": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "ADD",
      "path": "5"
    },
    "5242": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5243": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "POP",
      "path": "5"
    },
    "5244": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "POP",
      "path": "5"
    },
    "5245": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5247": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5248": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5249": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5250": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "SUB",
      "path": "5"
    },
    "5251": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5252": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5253": {
      "fn": "ERC20._transfer",
      "offset": [
        5300,
        5370
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5260": {
      "op": "SHL"
    },
    "5261": {
      "op": "SUB"
    },
    "5262": {
      "fn": "ERC20._transfer",
      "offset": [
        5388,
        5411
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 60
    },
    "5263": {
      "branch": 78,
      "fn": "ERC20._transfer",
      "offset": [
        5388,
        5411
      ],
      "op": "AND",
      "path": "5"
    },
    "5264": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CA"
    },
    "5267": {
      "branch": 78,
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5268": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5270": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5271": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5277": {
      "op": "SHL"
    },
    "5278": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5279": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5280": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5282": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "ADD",
      "path": "5"
    },
    "5283": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5284": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5285": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5287": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "ADD",
      "path": "5"
    },
    "5288": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5289": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5290": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "SUB",
      "path": "5"
    },
    "5291": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5292": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5293": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "5295": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5296": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5297": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5299": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "ADD",
      "path": "5"
    },
    "5300": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5301": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1731"
    },
    "5304": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "5306": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5307": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5308": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5310": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "ADD",
      "path": "5"
    },
    "5311": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5312": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "POP",
      "path": "5"
    },
    "5313": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "POP",
      "path": "5"
    },
    "5314": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5316": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5317": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5318": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5319": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "SUB",
      "path": "5"
    },
    "5320": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5321": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5322": {
      "fn": "ERC20._transfer",
      "offset": [
        5380,
        5451
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5323": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 61,
      "value": "0x150D"
    },
    "5326": {
      "fn": "ERC20._transfer",
      "offset": [
        5504,
        5510
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5327": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5329": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5330": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5331": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5333": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "ADD",
      "path": "5"
    },
    "5334": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5336": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5337": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5338": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "5340": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5341": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5342": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5344": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "ADD",
      "path": "5"
    },
    "5345": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17F3"
    },
    "5348": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "5350": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5351": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5358": {
      "op": "SHL"
    },
    "5359": {
      "op": "SUB"
    },
    "5360": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5361": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "AND",
      "path": "5"
    },
    "5362": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5491
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5364": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5365": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5366": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5367": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5369": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5370": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5371": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5372": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5374": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5375": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5376": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5377": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5499
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5378": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5379": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "5384": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5503
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x159C"
    },
    "5387": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "AND",
      "path": "5"
    },
    "5388": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5482,
        5553
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5389": {
      "fn": "ERC20._transfer",
      "offset": [
        5482,
        5553
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5396": {
      "op": "SHL"
    },
    "5397": {
      "op": "SUB"
    },
    "5398": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5399": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5400": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "AND",
      "path": "5"
    },
    "5401": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5471
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5403": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5404": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5405": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5406": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5408": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5409": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5410": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5411": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5413": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5414": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5415": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5479
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5416": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5553
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5417": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5553
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5418": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5553
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5419": {
      "fn": "ERC20._transfer",
      "offset": [
        5462,
        5553
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5420": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5606
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 62
    },
    "5421": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5606
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5422": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5606
      ],
      "op": "AND",
      "path": "5"
    },
    "5423": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5606
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5424": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5606
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5425": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5606
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5426": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5606
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5427": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5618
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1542"
    },
    "5430": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5618
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5431": {
      "fn": "ERC20._transfer",
      "offset": [
        5611,
        5617
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5432": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5618
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "5437": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF85"
    },
    "5440": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5618
      ],
      "op": "AND",
      "path": "5"
    },
    "5441": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5586,
        5618
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5442": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5618
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5449": {
      "op": "SHL"
    },
    "5450": {
      "op": "SUB"
    },
    "5451": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5452": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5453": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "AND",
      "path": "5"
    },
    "5454": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5572
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5456": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5457": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5458": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5459": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5461": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5462": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5463": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5464": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5466": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5467": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5468": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5469": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5470": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5618
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5471": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5618
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5472": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5618
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5473": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5618
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5474": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 63
    },
    "5475": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5476": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5477": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5478": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5479": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5480": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5481": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5482": {
      "fn": "ERC20._transfer",
      "offset": [
        5563,
        5583
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5483": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5484": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5485": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "AND",
      "path": "5"
    },
    "5486": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5487": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5520": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5521": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5522": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5523": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5524": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "SUB",
      "path": "5"
    },
    "5525": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "ADD",
      "path": "5"
    },
    "5526": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5527": {
      "fn": "ERC20._transfer",
      "offset": [
        5633,
        5668
      ],
      "op": "LOG3",
      "path": "5"
    },
    "5528": {
      "fn": "ERC20._transfer",
      "offset": [
        5211,
        5675
      ],
      "op": "POP",
      "path": "5"
    },
    "5529": {
      "fn": "ERC20._transfer",
      "offset": [
        5211,
        5675
      ],
      "op": "POP",
      "path": "5"
    },
    "5530": {
      "fn": "ERC20._transfer",
      "offset": [
        5211,
        5675
      ],
      "op": "POP",
      "path": "5"
    },
    "5531": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        5211,
        5675
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5532": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5533": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5535": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 64
    },
    "5536": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5537": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5538": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "12"
    },
    "5539": {
      "branch": 81,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5540": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x162B"
    },
    "5543": {
      "branch": 81,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5544": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5546": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5547": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5553": {
      "op": "SHL"
    },
    "5554": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5555": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5556": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5558": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "12"
    },
    "5559": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5560": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5561": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5563": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "12"
    },
    "5564": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5565": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5566": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "12"
    },
    "5567": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5568": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5569": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5570": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5571": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5572": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5573": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5574": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5575": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5577": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "12"
    },
    "5578": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5579": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5580": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5581": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5582": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5583": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5585": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "12"
    },
    "5586": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5587": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5588": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5589": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5592": {
      "op": "JUMPDEST"
    },
    "5593": {
      "op": "DUP4"
    },
    "5594": {
      "op": "DUP2"
    },
    "5595": {
      "op": "LT"
    },
    "5596": {
      "op": "ISZERO"
    },
    "5597": {
      "op": "PUSH2",
      "value": "0x15F0"
    },
    "5600": {
      "op": "JUMPI"
    },
    "5601": {
      "op": "DUP2"
    },
    "5602": {
      "op": "DUP2"
    },
    "5603": {
      "op": "ADD"
    },
    "5604": {
      "op": "MLOAD"
    },
    "5605": {
      "op": "DUP4"
    },
    "5606": {
      "op": "DUP3"
    },
    "5607": {
      "op": "ADD"
    },
    "5608": {
      "op": "MSTORE"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5611": {
      "op": "ADD"
    },
    "5612": {
      "op": "PUSH2",
      "value": "0x15D8"
    },
    "5615": {
      "op": "JUMP"
    },
    "5616": {
      "op": "JUMPDEST"
    },
    "5617": {
      "op": "POP"
    },
    "5618": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5619": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5620": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5621": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5622": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5623": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5624": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5625": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "12"
    },
    "5626": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5627": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5629": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "12"
    },
    "5630": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5631": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5632": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x161D"
    },
    "5635": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5636": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5637": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5638": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "12"
    },
    "5639": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5640": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5641": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5643": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5644": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5646": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "12"
    },
    "5647": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "5650": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "12"
    },
    "5651": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "12"
    },
    "5652": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "12"
    },
    "5653": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "12"
    },
    "5654": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5655": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5656": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5658": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "12"
    },
    "5659": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5660": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5661": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5662": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5663": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5664": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5665": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5666": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "12"
    },
    "5667": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5669": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5670": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5671": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5672": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "12"
    },
    "5673": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5674": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5675": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5676": {
      "op": "POP"
    },
    "5677": {
      "op": "POP"
    },
    "5678": {
      "op": "POP"
    },
    "5679": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5680": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "12"
    },
    "5681": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5682": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5683": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5684": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5686": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 65
    },
    "5687": {
      "branch": 82,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5688": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1682"
    },
    "5691": {
      "branch": 82,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5692": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5694": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5701": {
      "op": "SHL"
    },
    "5702": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5703": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5704": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5706": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5708": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5709": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "12"
    },
    "5710": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5711": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5712": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5713": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5714": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5715": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "5717": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5718": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "12"
    },
    "5719": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5720": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5721": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5722": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5723": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5724": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5725": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5726": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "5728": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5729": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5730": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "12"
    },
    "5731": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5732": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5733": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5734": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "12"
    },
    "5735": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5736": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5737": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5738": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5739": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5741": {
      "op": "DUP4"
    },
    "5742": {
      "op": "ISZERO"
    },
    "5743": {
      "op": "PUSH2",
      "value": "0x15F0"
    },
    "5746": {
      "op": "JUMPI"
    },
    "5747": {
      "op": "DUP2"
    },
    "5748": {
      "op": "DUP2"
    },
    "5749": {
      "op": "ADD"
    },
    "5750": {
      "op": "MLOAD"
    },
    "5751": {
      "op": "DUP4"
    },
    "5752": {
      "op": "DUP3"
    },
    "5753": {
      "op": "ADD"
    },
    "5754": {
      "op": "MSTORE"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5757": {
      "op": "ADD"
    },
    "5758": {
      "op": "PUSH2",
      "value": "0x15D8"
    },
    "5761": {
      "op": "JUMP"
    },
    "5762": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5763": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "12"
    },
    "5764": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5766": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5767": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5768": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5769": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x168E"
    },
    "5772": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5773": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5774": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5775": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "12"
    },
    "5776": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5777": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5778": {
      "op": "POP"
    },
    "5779": {
      "op": "POP"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "op": "POP"
    },
    "5782": {
      "op": "POP"
    },
    "5783": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5784": {
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5785": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5786": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5787": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5788": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5790": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5791": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5793": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "AND",
      "path": "3"
    },
    "5794": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5795": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5798": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "MUL",
      "path": "3"
    },
    "5799": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SUB",
      "path": "3"
    },
    "5800": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "AND",
      "path": "3"
    },
    "5801": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5803": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5804": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DIV",
      "path": "3"
    },
    "5805": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5806": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5808": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5809": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5811": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5813": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5814": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5815": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5817": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "5818": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5820": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5821": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DIV",
      "path": "3"
    },
    "5822": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5823": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "5824": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5825": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5826": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5828": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "LT",
      "path": "3"
    },
    "5829": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16D9"
    },
    "5832": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5833": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5834": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5835": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "5837": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "NOT",
      "path": "3"
    },
    "5838": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "AND",
      "path": "3"
    },
    "5839": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5840": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5841": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "5842": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "OR",
      "path": "3"
    },
    "5843": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5844": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5845": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1706"
    },
    "5848": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5849": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5850": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5851": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5852": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "5853": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5855": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "5856": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5857": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5858": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5859": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5860": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1706"
    },
    "5863": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5864": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5865": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5866": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "5867": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5868": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5869": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5870": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "GT",
      "path": "3"
    },
    "5871": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5872": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1706"
    },
    "5875": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5876": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5877": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5878": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5879": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5880": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5881": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5883": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "5884": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5885": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5886": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5888": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "5889": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5890": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16EB"
    },
    "5893": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5894": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5895": {
      "op": "POP"
    },
    "5896": {
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1712"
    },
    "5899": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5900": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5901": {
      "op": "POP"
    },
    "5902": {
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1716"
    },
    "5905": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        462,
        7609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5906": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5907": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "POP",
      "path": "3"
    },
    "5908": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5909": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        462,
        7609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5910": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5911": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x775"
    },
    "5914": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5915": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5916": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5917": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5918": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5919": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "GT",
      "path": "3"
    },
    "5920": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5921": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1712"
    },
    "5924": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5925": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5927": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5928": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5929": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5931": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "5932": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171C"
    },
    "5935": {
      "fn": "SafeMath.div",
      "offset": [
        462,
        7609
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "85e86ef3bc73f22e69260563e9d9010f1576c450",
  "source": "pragma solidity ^0.5.7;\n// Copyright BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\n\nimport \"./SafeMath.sol\";\nimport './ERC20Pausable.sol';\nimport './IERC20Template.sol';\n\n/**\n* @title DataTokenTemplate\n*  \n* @dev DataTokenTemplate is a DataToken ERC20 compliant template\n*      Used by the factory contract as a bytecode reference to deploy new DataTokens.\n*/\ncontract DataTokenTemplate is IERC20Template, ERC20Pausable {\n    using SafeMath for uint256;\n    \n    bool    private initialized = false;\n    string  private _name;\n    string  private _symbol;\n    string  private _blob;\n    uint256 private _cap;\n    uint256 private _decimals;\n    address private _minter;\n    address payable private _feeAddress;\n    \n    modifier onlyNotInitialized() {\n      require(!initialized, 'DataTokenTemplate: already initialized');\n        _;\n    }\n    \n    modifier onlyMinter() {\n        require(msg.sender == _minter, 'DataTokenTemplate: invalid minter');\n        _;\n    }\n\n    /**\n     * @dev constructor\n     *      Called on contract deployment.  Could not be called with zero address parameters.\n     * @param name -- token name\n     * @param symbol -- token symbol\n     * @param minter -- address with the right to mint()\n     * @param feeAddress -- address that receives fees\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        address minter,\n        uint256 cap,\n        string memory blob,\n        address payable feeAddress)\n        public\n    {\n        _initialize(name, symbol, minter, cap, blob, feeAddress);\n    }\n    \n    /**\n     * @dev initialize\n     *      Called on contract initialization. Used on new DataToken instance setup.\n            Calls private _initialize function. Only if contract is not initialized.\n     * @param name -- token name\n     * @param symbol -- token symbol\n     * @param minter -- address with the right to mint()\n     * @param feeAddress -- address that receives fees\n     */\n    function initialize(\n        string memory name,\n        string memory symbol,\n        address minter,\n        uint256 cap,\n        string memory blob,\n        address payable feeAddress\n    ) \n        public onlyNotInitialized\n        returns (bool)\n    {\n      return _initialize(name, symbol, minter, cap, blob, feeAddress);\n    }\n\n    /**\n     * @dev _initialize\n     *      Private function called on contract initialization.\n            No of the parameters can be a zero address. \n     * @param name -- token name\n     * @param symbol -- token symbol\n     * @param minter -- address with the right to mint()\n     * @param feeAddress -- address that receives fees\n     */\n    function _initialize(\n        string memory name,\n        string memory symbol,\n        address minter,\n        uint256 cap,\n        string memory blob,\n        address payable feeAddress\n    )\n        private\n        returns (bool)\n    {\n      require(minter != address(0), 'DataTokenTemplate: Minter address was 0');\n      require(feeAddress != address(0), 'DataTokenTemplate: feeAddress was 0');\n      require(_minter == address(0), 'DataTokenTemplate: Invalid minter, access denied');\n      require(cap > 0, 'DataTokenTemplate: Cap was <= 0');\n        \n        _decimals = 0;\n        _cap = cap;\n        _name = name;\n        _blob = blob;\n        _symbol = symbol;\n        _minter = minter;\n\t_feeAddress = feeAddress;\n        initialized = true;\n        return initialized;\n    }\n\n    /**\n     * @dev mint Mint new tokens, charge a fee.\n     *      Can be called only if the contract is not paused.\n            Can be called only by the minter address.\n            Fee is paid via msg.value which must be >0\n     * @param address_to -- send minted tokens to this address\n     * @param num_tokens_minted -- # tokens to be minted\n     */\n    function mint(address address_to, uint256 num_tokens_minted) \n    public payable onlyNotPaused onlyMinter \n    {\n        require(totalSupply().add(num_tokens_minted) <= _cap, 'cap exceeded');\n\n\tuint256 gas_before = gasleft();\n        _mint(address_to, num_tokens_minted);\n\tuint256 gas_after = gasleft();\n\t\n\tuint256 gas_used = gas_before - gas_after;\n\tuint256 max_fee = gas_used * tx.gasprice;\n\tuint256 fee = _calculateFee(num_tokens_minted, max_fee);\n\t\n        require(msg.value >= fee, 'not enough funds to mint');\n        _feeAddress.transfer(fee);\n    }\n\n    function _calculateFee(uint256 num_tokens_minted, uint256 max_fee)\n        public view returns (uint256)\n    {\n      if (num_tokens_minted < 10)       { return max_fee.div(20); }\n      else if (num_tokens_minted < 100) { return max_fee.div(5);  }\n      else                              { return max_fee; }\n    }\n    \n    \n    /**\n     * @dev pause\n     *      Function that pauses the contract.\n            Can be called only if the contract is not already paused.\n            Can be called only by the minter address.\n     */\n    function pause() public onlyNotPaused onlyMinter {\n        paused = true;\n    }\n\n    /**\n     * @dev unpause\n     *      Function that unpauses the contract.\n            Can be called only if the contract is paused.\n            Can be called only by the minter address.\n     */\n    function unpause() public onlyPaused onlyMinter {\n        paused = false;\n    }\n\n    /**\n     * @dev setMinter\n     *      Function that sents a new minter address.\n            Can be called only if the contract is not paused.\n            Can be called only by the minter address.\n     * @param minter refers to a new minter address.\n     */\n    function setMinter(address minter) public onlyNotPaused onlyMinter {\n        _minter = minter;\n    }\n\n    /**\n     * @dev name\n     *      Function that reads private variable name.\n     * @return DataToken name.\n     */\n    function name() public view returns(string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev symbol\n     *      Function that reads private variable symbol.\n     * @return DataToken symbol.\n     */\n    function symbol() public view returns(string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev blob\n     *      Function that reads private variable blob.\n     * @return DataToken blob.\n     */\n    function blob() public view returns(string memory) {\n        return _blob;\n    }\n\n    /**\n     * @dev decimals\n     *      Function that reads private variable decimals.\n     * @return DataToken decimals.\n     */\n    function decimals() public view returns(uint256) {\n        return _decimals;\n    }\n\n    /**\n     * @dev cap\n     *      Function that reads private variable cap.\n     * @return DataToken cap.\n     */\n    function cap() public view returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev isMinter\n     *      Function takes the address and checks if it is a minter address.\n     * @param account refers to the address that will be checked if it is a minter address.\n     * @return DataToken cap.\n     */\n    function isMinter(address account) public view returns(bool) {\n        return (_minter == account);\n    } \n\n    /**\n     * @dev isInitialized\n     *      Function checks if the contract is initialized.\n     * @return true if the contract is initialized, false if it is not.\n     */ \n    function isInitialized() public view returns(bool) {\n        return initialized;\n    }\n\n    /**\n     * @dev isPaused\n     *      Function checks if the contract is paused.\n     * @return true if the contract is paused, false if it is not.\n     */ \n    function isPaused() public view returns(bool) {\n        return paused;\n    }\n}\n",
  "sourceMap": "462:7147:3:-;;;423:28:6;;;-1:-1:-1;;565:35:3;;;1389:272;5:2:-1;;;;30:1;27;20:12;5:2;1389:272:3;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1389:272:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1389:272:3;;420:4:-1;411:14;;;;1389:272:3;;;;;411:14:-1;1389:272:3;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1389:272:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1389:272:3;;420:4:-1;411:14;;;;1389:272:3;;;;;411:14:-1;1389:272:3;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1389:272:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1389:272:3;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1389:272:3;;420:4:-1;411:14;;;;1389:272:3;;;;;411:14:-1;1389:272:3;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1389:272:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1389:272:3;;;;;;-1:-1:-1;1598:56:3;;-1:-1:-1;1610:4:3;1616:6;1624;1632:3;1637:4;1389:272;-1:-1:-1;;;;;1598:11:3;:56;:::i;:::-;;1389:272;;;;;;462:7147;;2744:784;2971:4;-1:-1:-1;;;;;2997:20:3;;2989:72;;;;-1:-1:-1;;;2989:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3077:24:3;;3069:72;;;;-1:-1:-1;;;3069:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3157:7;;-1:-1:-1;;;;;3157:7:3;:21;3149:82;;;;-1:-1:-1;;;3149:82:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3253:1;3247:3;:7;3239:51;;;;;-1:-1:-1;;;3239:51:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;3321:1;3309:9;:13;3332:4;:10;;;3352:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3374:12:3;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3396:16:3;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;3422:7:3;:16;;-1:-1:-1;;;;;3422:16:3;;;-1:-1:-1;;;;;;3422:16:3;;;;;;;3441:11;:24;;;;;;;;;;;;-1:-1:-1;;3475:11:3;:18;;-1:-1:-1;;3475:18:3;3422:16;3475:18;;;;;;;3510:11;;3475:18;3510:11;;;-1:-1:-1;;2744:784:3:o;462:7147::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;462:7147:3;;;-1:-1:-1;462:7147:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/DataTokenTemplate.sol",
  "type": "contract"
}